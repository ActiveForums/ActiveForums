ALTER TABLE {databaseOwner}{objectQualifier}activeforums_Forums ADD
	LastPostSubject nvarchar(255) NULL,
	LastPostAuthorName nvarchar(255) NULL,
	LastPostAuthorId int NOT NULL CONSTRAINT DF_{objectQualifier}activeforums_Forums_LastPostAuthorId DEFAULT -1,
	LastPostDate datetime NULL
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Topics_Move]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_Move]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Forums_List]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Forums_List]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Topics_SaveToForum]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_SaveToForum]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Topics_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_Delete]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_ForumView]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_ForumView]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Forums_Get]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Forums_Get]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Reply_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Reply_Delete]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_ForumView]
@PortalId int,
@ModuleId int,
@UserId int,
@IsSuperUser bit = 0,
@ParentForumId int = -1,
@ForumIds nvarchar(2000) = ''
AS
IF @ForumIds <> ''
BEGIN
If @IsSuperUser = 0
BEGIN
SELECT         G.ForumGroupId, G.ModuleId, G.GroupName, F.ForumId, F.ForumName, F.ForumDesc, F.Active AS ForumActive, F.Hidden AS ForumHidden, F.TotalTopics, 
                F.TotalReplies, F.ParentForumId, G.SortOrder AS GroupSort, F.SortOrder AS ForumSort, G.Active AS GroupActive, G.Hidden AS GroupHidden,
				F.LastTopicId,
				F.LastReplyId,
				IsNull(F.LastPostSubject,'') as LastPostSubject,
				IsNull(F.LastPostAuthorName,'') as LastPostAuthorName,
				IsNull(F.LastPostAuthorId,-1) as LastPostAuthorId,
				IsNull(F.LastPostDate,'') as LastPostDate,
				(CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNull(sec.[View],0) END) as CanView,
				(CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNull(sec.[Read],0) END) as CanRead,
				(CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNull(sec.[Subscribe],0) END) as CanSubscribe,
				LastRead = IsNull((SELECT LastAccessDate FROM {databaseOwner}{objectQualifier}activeforums_Forums_Tracking WHERE UserId = @UserId AND ForumId = F.ForumId),''),
				"AllowRSS" = (SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE ModuleId = F.ModuleId AND GroupKey = F.ForumSettingsKey AND SettingName = 'ALLOWRSS')
									
FROM         
	{databaseOwner}{objectQualifier}activeforums_Groups AS G INNER JOIN
    {databaseOwner}{objectQualifier}activeforums_Forums AS F ON G.ForumGroupId = F.ForumGroupId INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_GetForumSecurity(@PortalId, @UserId, @IsSuperUser) as sec on sec.ForumId  = F.ForumId INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_Functions_Split(@ForumIds,';') as ft ON ft.id = f.ForumId
				 
WHERE G.ModuleId = @ModuleId AND (G.Active = 1 AND F.Active = 1) AND (@ParentForumId = -1 OR (@ParentForumId > 0 AND F.ParentForumId = @ParentForumId))
ORDER BY GroupSort, ForumSort
END
ELSE
BEGIN
SELECT         G.ForumGroupId, G.ModuleId, G.GroupName, F.ForumId, F.ForumName, F.ForumDesc, F.Active AS ForumActive, F.Hidden AS ForumHidden, F.TotalTopics, 
                F.TotalReplies, F.ParentForumId, G.SortOrder AS GroupSort, F.SortOrder AS ForumSort, G.Active AS GroupActive, G.Hidden AS GroupHidden,
				F.LastTopicId,
				F.LastReplyId,
				IsNull(F.LastPostSubject,'') as LastPostSubject,
				IsNull(F.LastPostAuthorName,'') as LastPostAuthorName,
				IsNull(F.LastPostAuthorId,-1) as LastPostAuthorId,
				IsNull(F.LastPostDate,'') as LastPostDate,
				"CanView" = 1,
				"CanRead" = 1,
				"CanSubscribe" = 1,
				LastRead = IsNull((SELECT LastAccessDate FROM {databaseOwner}{objectQualifier}activeforums_Forums_Tracking WHERE UserId = @UserId AND ForumId = F.ForumId),''),
				"AllowRSS" = (SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE ModuleId = F.ModuleId AND GroupKey = F.ForumSettingsKey AND SettingName = 'ALLOWRSS')
					
FROM         
	{databaseOwner}{objectQualifier}activeforums_Groups AS G INNER JOIN
    {databaseOwner}{objectQualifier}activeforums_Forums AS F ON G.ForumGroupId = F.ForumGroupId INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_Functions_Split(@ForumIds,';') as ft ON ft.id = f.ForumId
				 
WHERE G.ModuleId = @ModuleId AND (G.Active = 1 AND F.Active = 1) AND (@ParentForumId = -1 OR (@ParentForumId > 0 AND F.ParentForumId = @ParentForumId))
ORDER BY GroupSort, ForumSort
END
If @UserId > 0 AND @ParentForumId =-1
	BEGIN
	SELECT TopicCount, ReplyCount, ViewCount, AnswerCount, RewardPoints, DateLastActivity, 
                      DateLastPost, SignatureDisabled, TrustLevel, AdminWatch, AttachDisabled, PrefDefaultSort, PrefDefaultShowReplies, 
                      PrefJumpLastPost, PrefTopicSubscribe, PrefSubscriptionType, PrefUseAjax, PrefEmailFormat, PrefBlockAvatars, PrefBlockSignatures, PrefPageSize
                      
	FROM         {databaseOwner}{objectQualifier}activeforums_UserProfiles WHERE UserId = @UserId
	END
END
ELSE
BEGIN
If @IsSuperUser = 0
BEGIN
SELECT         G.ForumGroupId, G.ModuleId, G.GroupName, F.ForumId, F.ForumName, F.ForumDesc, F.Active AS ForumActive, F.Hidden AS ForumHidden, F.TotalTopics, 
                F.TotalReplies, F.ParentForumId, G.SortOrder AS GroupSort, F.SortOrder AS ForumSort, G.Active AS GroupActive, G.Hidden AS GroupHidden,
				F.LastTopicId,
				F.LastReplyId,
				IsNull(F.LastPostSubject,'') as LastPostSubject,
				IsNull(F.LastPostAuthorName,'') as LastPostAuthorName,
				IsNull(F.LastPostAuthorId,-1) as LastPostAuthorId,
				IsNull(F.LastPostDate,'') as LastPostDate,
				(CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNull(sec.[View],0) END) as CanView,
				(CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNull(sec.[Read],0) END) as CanRead,
				(CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNull(sec.[Subscribe],0) END) as CanSubscribe,
				LastRead = IsNull((SELECT LastAccessDate FROM {databaseOwner}{objectQualifier}activeforums_Forums_Tracking WHERE UserId = @UserId AND ForumId = F.ForumId),''),
				"AllowRSS" = (SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE ModuleId = F.ModuleId AND GroupKey = F.ForumSettingsKey AND SettingName = 'ALLOWRSS')
									
FROM         
	{databaseOwner}{objectQualifier}activeforums_Groups AS G INNER JOIN
    {databaseOwner}{objectQualifier}activeforums_Forums AS F ON G.ForumGroupId = F.ForumGroupId INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_GetForumSecurity(@PortalId, @UserId, @IsSuperUser) as sec on sec.ForumId  = F.ForumId
				 
WHERE G.ModuleId = @ModuleId AND (G.Active = 1 AND F.Active = 1) AND (@ParentForumId = -1 OR (@ParentForumId > 0 AND F.ParentForumId = @ParentForumId))
ORDER BY GroupSort, ForumSort
END
ELSE
BEGIN
SELECT         G.ForumGroupId, G.ModuleId, G.GroupName, F.ForumId, F.ForumName, F.ForumDesc, F.Active AS ForumActive, F.Hidden AS ForumHidden, F.TotalTopics, 
                F.TotalReplies, F.ParentForumId, G.SortOrder AS GroupSort, F.SortOrder AS ForumSort, G.Active AS GroupActive, G.Hidden AS GroupHidden,
				F.LastTopicId,
				F.LastReplyId,
				IsNull(F.LastPostSubject,'') as LastPostSubject,
				IsNull(F.LastPostAuthorName,'') as LastPostAuthorName,
				IsNull(F.LastPostAuthorId,-1) as LastPostAuthorId,
				IsNull(F.LastPostDate,'') as LastPostDate,
				"CanView" = 1,
				"CanRead" = 1,
				"CanSubscribe" = 1,
				LastRead = IsNull((SELECT LastAccessDate FROM {databaseOwner}{objectQualifier}activeforums_Forums_Tracking WHERE UserId = @UserId AND ForumId = F.ForumId),''),
				"AllowRSS" = (SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE ModuleId = F.ModuleId AND GroupKey = F.ForumSettingsKey AND SettingName = 'ALLOWRSS')
					
FROM         
	{databaseOwner}{objectQualifier}activeforums_Groups AS G INNER JOIN
    {databaseOwner}{objectQualifier}activeforums_Forums AS F ON G.ForumGroupId = F.ForumGroupId 
				 
WHERE G.ModuleId = @ModuleId AND (G.Active = 1 AND F.Active = 1) AND (@ParentForumId = -1 OR (@ParentForumId > 0 AND F.ParentForumId = @ParentForumId))
ORDER BY GroupSort, ForumSort
END
If @UserId > 0 AND @ParentForumId =-1
	BEGIN
	SELECT TopicCount, ReplyCount, ViewCount, AnswerCount, RewardPoints, DateLastActivity, 
                      DateLastPost, SignatureDisabled, TrustLevel, AdminWatch, AttachDisabled, PrefDefaultSort, PrefDefaultShowReplies, 
                      PrefJumpLastPost, PrefTopicSubscribe, PrefSubscriptionType, PrefUseAjax, PrefEmailFormat, PrefBlockAvatars, PrefBlockSignatures, PrefPageSize
                      
	FROM         {databaseOwner}{objectQualifier}activeforums_UserProfiles WHERE UserId = @UserId
	END
END
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_Delete]
@ForumId int,
@TopicId int,
@DelBehavior int,
@UpdateStats bit = 1
AS
DECLARE @ContentId int
SELECT @ContentId = ContentId FROM {databaseOwner}{objectQualifier}activeforums_Topics WHERE TopicId = @TopicId
BEGIN
IF @DelBehavior = 1
	BEGIN
		UPDATE {databaseOwner}{objectQualifier}activeforums_Content SET IsDeleted = 1 WHERE ContentId = @ContentId OR ContentId IN (Select ContentId FROM {databaseOwner}{objectQualifier}activeforums_Replies WHERE TopicId = @TopicId)
		UPDATE {databaseOwner}{objectQualifier}activeforums_Topics SET IsDeleted = 1 WHERE TopicId = @TopicId
		UPDATE {databaseOwner}{objectQualifier}activeforums_Replies SET IsDeleted = 1 WHERE TopicId = @TopicId
	END
ELSE
	BEGIN
		DELETE FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics WHERE ForumId = @ForumId AND TopicId = @TopicId
		DELETE FROM {databaseOwner}{objectQualifier}activeforums_Replies WHERE TopicId = @TopicId
		DELETE FROM {databaseOwner}{objectQualifier}activeforums_Topics WHERE TopicId = @TopicId
		DELETE FROM {databaseOwner}{objectQualifier}activeforums_Content WHERE ContentId = @ContentId 
		DELETE FROM {databaseOwner}{objectQualifier}activeforums_Content WHERE ContentId IN (Select ContentId FROM {databaseOwner}{objectQualifier}activeforums_Replies WHERE TopicId = @TopicId)		
		DELETE FROM {databaseOwner}{objectQualifier}activeforums_Topics_Tags WHERE TopicId = @TopicId
		DELETE FROM {databaseOwner}{objectQualifier}activeforums_Topics_Ratings WHERE TopicId = @TopicId
	END
END
exec {databaseOwner}{objectQualifier}activeforums_Forums_LastUpdates @ForumId
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_SaveToForum]
@ForumId int,
@TopicId int,
@LastReplyId int
AS
BEGIN
DECLARE @LastPostId int 
DECLARE @tmpLastPostId int
SET @LastPostId = 0
SET @tmpLastPostId = -1
DECLARE @Subject nvarchar(250)
DECLARE @AuthorName nvarchar(150)
DECLARE @AuthorId int
DECLARE @PostDate datetime
DECLARE @LastTopicId int
DECLARE @ReplyId int

IF EXISTS (SELECT TopicId FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics WHERE ForumId = @ForumId AND TopicId = @TopicId)
	BEGIN
			
		IF @LastReplyId > 0
			BEGIN
			SET @tmpLastPostId = (SELECT MAX(ReplyId) from {databaseOwner}{objectQualifier}activeforums_Replies WHERE TopicId = @TopicId AND IsDeleted = 0 AND IsApproved = 1)
						
			UPDATE {databaseOwner}{objectQualifier}activeforums_ForumTopics
			SET LastReplyId = @tmpLastPostId WHERE ForumId = @ForumId AND TopicId = @TopicId

			SET @Subject = (SELECT TOP 1 c.Subject from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_replies as r on r.contentid = c.contentid and r.isapproved = 1 and r.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_topics as t on t.topicid = r.topicid inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId AND r.ReplyId = @tmpLastPostId)
			SET @AuthorName = (SELECT TOP 1 c.AuthorName from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_replies as r on r.contentid = c.contentid and r.isapproved = 1 and r.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_topics as t on t.topicid = r.topicid inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId AND r.ReplyId = @tmpLastPostId)
			SET @AuthorId = (SELECT TOP 1 c.AuthorId from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_replies as r on r.contentid = c.contentid and r.isapproved = 1 and r.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_topics as t on t.topicid = r.topicid inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId AND r.ReplyId = @tmpLastPostId)
			SET @ReplyId = (SELECT TOP 1 r.ReplyId from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_replies as r on r.contentid = c.contentid and r.isapproved = 1 and r.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_topics as t on t.topicid = r.topicid inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId AND r.ReplyId = @tmpLastPostId)
			SET @LastTopicId = (SELECT TOP 1 r.TopicId from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_replies as r on r.contentid = c.contentid and r.isapproved = 1 and r.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_topics as t on t.topicid = r.topicid inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId  AND r.ReplyId = @tmpLastPostId)
			SET @PostDate = (SELECT TOP 1 c.DateCreated from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_replies as r on r.contentid = c.contentid and r.isapproved = 1 and r.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_topics as t on t.topicid = r.topicid inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId  AND r.ReplyId = @tmpLastPostId)
			END
	END
ELSE
	BEGIN
	
	IF @LastReplyId = -1
		SET @LastReplyId = Null
		INSERT INTO {databaseOwner}{objectQualifier}activeforums_ForumTopics
			(ForumId, TopicId, LastReplyId)
			VALUES
			(@ForumId, @TopicId, @LastReplyId)
		SET @LastPostId = @TopicId
			SET @Subject = (SELECT TOP 1 c.Subject from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_Topics as t on t.contentid = c.contentid and t.isapproved = 1 and t.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId AND t.TopicId = @TopicId)
			SET @TopicId = (SELECT TOP 1 t.TopicId from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_Topics as t on t.contentid = c.contentid and t.isapproved = 1 and t.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId AND t.TopicId = @TopicId)
			SET @AuthorName = (SELECT TOP 1 c.AuthorName from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_Topics as t on t.contentid = c.contentid and t.isapproved = 1 and t.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId AND t.TopicId = @TopicId)
			SET @AuthorId = (SELECT TOP 1 c.AuthorId from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_Topics as t on t.contentid = c.contentid and t.isapproved = 1 and t.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId AND t.TopicId = @TopicId)
			SET @PostDate = (SELECT TOP 1 c.DateCreated from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_Topics as t on t.contentid = c.contentid and t.isapproved = 1 and t.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId AND t.TopicId = @TopicId)
			SET @ReplyId = 0
		
	END
END

exec {databaseOwner}{objectQualifier}activeforums_Forums_LastUpdates @ForumId
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Forums_Get]
@PortalId int,
@ModuleId int,
@ForumId int,
@UserId int =-1,
@WithSecurity bit = 0
AS 
SELECT     F.ForumId, F.ModuleId, F.ForumGroupId, F.ParentForumId, F.ForumName, F.ForumDesc, F.SortOrder, F.Active, F.Hidden, F.TotalTopics, 
                      F.TotalReplies, F.LastTopicId, F.LastReplyId, F.ForumSettingsKey, F.ForumSecurityKey, G.GroupName, ISNULL(P.ForumName, '') AS ParentForumName
FROM         {databaseOwner}{objectQualifier}activeforums_Forums AS F INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Groups AS G ON F.ForumGroupId = G.ForumGroupId LEFT OUTER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Forums AS P ON F.ParentForumId = P.ForumId
WHERE     (F.ForumId = @ForumId)
If @WithSecurity = 1 AND @ForumId > 0
	BEGIN
	DECLARE @IsSuperUser bit 
	SET @IsSuperUser = 0
	SELECT @IsSuperUser = IsSuperUser FROM {databaseOwner}{objectQualifier}Users WHERE UserId = @UserId
	exec {databaseOwner}{objectQualifier}activeforums_Security_GetByUser @PortalId, @ForumId, @UserId, @IsSuperUser
	END
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Forums_List]
@ModuleId int,
@ForumGroupId int,
@ParentForumId int,
@FillLastPost bit
AS
IF @ForumGroupId = -1 AND @ParentForumId = -1 AND @FillLastPost = 0
	--Return all Forums
SELECT     IsNull(F.ForumId,-1) as ForumId, G.ModuleId, G.ForumGroupId, IsNull(F.ParentForumId,'-1') as ParentForumId, IsNull(F.ForumName,'') as ForumName, F.ForumDesc, F.SortOrder, F.Active, F.Hidden, F.TotalTopics, 
                      F.TotalReplies, F.LastTopicId, F.LastReplyId, F.ForumSettingsKey, F.ForumSecurityKey, G.GroupName, ISNULL(P.ForumName, '') AS ParentForumName,
		TopicsTemplateId = IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE SettingName = 'TOPICSTEMPLATEID' and GroupKey = F.ForumSettingsKey),0),
		TopicTemplateId =  IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE SettingName = 'TOPICTEMPLATEID' and GroupKey = F.ForumSettingsKey),0)
FROM         {databaseOwner}{objectQualifier}activeforums_Forums AS F RIGHT OUTER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Groups AS G ON F.ForumGroupId = G.ForumGroupId LEFT OUTER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Forums AS P ON F.ParentForumId = P.ForumId
WHERE     (G.ModuleId = @ModuleId)
ORDER BY G.SortOrder, F.SortOrder
	
ELSE
	IF @ForumGroupId > 0 AND @ParentForumId = -1 AND @FillLastPost = 0
		--Return Forums in Group
		SELECT     F.ForumId, F.ModuleId, F.ForumGroupId, F.ParentForumId, F.ForumName, F.ForumDesc, F.SortOrder, F.Active, F.Hidden, F.TotalTopics, 
						  F.TotalReplies, F.LastTopicId, F.LastReplyId, F.ForumSettingsKey, F.ForumSecurityKey, G.GroupName, ISNULL(P.ForumName, '') AS ParentForumName,
		TopicsTemplateId = IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE SettingName = 'TOPICSTEMPLATEID' and GroupKey = F.ForumSettingsKey),0),
		TopicTemplateId =  IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE SettingName = 'TOPICTEMPLATEID' and GroupKey = F.ForumSettingsKey),0)
		FROM         {databaseOwner}{objectQualifier}activeforums_Forums AS F INNER JOIN
						  {databaseOwner}{objectQualifier}activeforums_Groups AS G ON F.ForumGroupId = G.ForumGroupId LEFT OUTER JOIN
						  {databaseOwner}{objectQualifier}activeforums_Forums AS P ON F.ParentForumId = P.ForumId
		WHERE F.ModuleId = @ModuleId AND F.ForumGroupId = @ForumGroupId
		ORDER By F.SortOrder
	ELSE
		If @ForumGroupId > 0 AND @ParentForumId > 0 AND @FillLastPost = 0
			--Return Sub Forums
			
			SELECT     F.ForumId, F.ModuleId, F.ForumGroupId, F.ParentForumId, F.ForumName, F.ForumDesc, F.SortOrder, F.Active, F.Hidden, F.TotalTopics, 
							  F.TotalReplies, F.LastTopicId, F.LastReplyId, F.ForumSettingsKey, F.ForumSecurityKey, G.GroupName, ISNULL(P.ForumName, '') AS ParentForumName,
		TopicsTemplateId = IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE SettingName = 'TOPICSTEMPLATEID' and GroupKey = F.ForumSettingsKey),0),
		TopicTemplateId =  IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE SettingName = 'TOPICTEMPLATEID' and GroupKey = F.ForumSettingsKey),0)
			FROM         {databaseOwner}{objectQualifier}activeforums_Forums AS F INNER JOIN
							  {databaseOwner}{objectQualifier}activeforums_Groups AS G ON F.ForumGroupId = G.ForumGroupId LEFT OUTER JOIN
							  {databaseOwner}{objectQualifier}activeforums_Forums AS P ON F.ParentForumId = P.ForumId
			WHERE F.ModuleId = @ModuleId AND F.ParentForumId = @ParentForumId
			ORDER By G.SortOrder, F.SortOrder
		ELSE
			---Returns Forums In Group with Last Post Info
SELECT     F.ForumId, F.ModuleId, F.ForumGroupId, F.ParentForumId, F.ForumName, F.ForumDesc, F.SortOrder, F.Active, F.Hidden, F.TotalTopics, 
                      F.TotalReplies, F.LastTopicId, F.LastReplyId, F.ForumSettingsKey, F.ForumSecurityKey, G.GroupName, ISNULL(P.ForumName, '') AS ParentForumName, ISNULL(U.FirstName, '') 
                      AS LastPostFirstName, ISNULL(U.LastName, '') AS LastPostLastName, ISNULL(C.AuthorId, - 1) AS LastPostUserId, ISNULL(C.AuthorName, '') AS LastPostUserName, 
                      C.Subject AS LastPostSubject, C.DateCreated AS LastPostDateTime,
		TopicsTemplateId = IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE SettingName = 'TOPICSTEMPLATEID' and GroupKey = F.ForumSettingsKey),0),
		TopicTemplateId =  IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE SettingName = 'TOPICTEMPLATEID' and GroupKey = F.ForumSettingsKey),0)
FROM         {databaseOwner}{objectQualifier}activeforums_Content AS C INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Topics AS T ON C.ContentId = T.ContentId INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_UserDetails AS UD INNER JOIN
                      {databaseOwner}{objectQualifier}Users AS U ON UD.UserID = U.UserID ON C.AuthorId = UD.UserID RIGHT OUTER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Forums AS F INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Groups AS G ON F.ForumGroupId = G.ForumGroupId ON T.TopicId = F.LastPostId LEFT OUTER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Forums AS P ON F.ParentForumId = P.ForumId
WHERE     (F.ModuleId = @ModuleId) AND (F.ForumGroupId = @ForumGroupId)
ORDER BY G.SortOrder, F.SortOrder
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Reply_Delete]
@ForumId int,
@TopicId int,
@ReplyId int,
@DelBehavior int
AS
DECLARE @ContentId int
SELECT @ContentId = ContentId FROM {databaseOwner}{objectQualifier}activeforums_Replies WHERE TopicId = @TopicId AND ReplyId = @ReplyId
BEGIN
IF @DelBehavior = 1
	BEGIN
		UPDATE {databaseOwner}{objectQualifier}activeforums_Replies SET IsDeleted = 1 WHERE TopicId = @TopicId AND ReplyId = @ReplyId
	END
ELSE
	BEGIN
		DELETE FROM {databaseOwner}{objectQualifier}activeforums_Replies WHERE TopicId = @TopicId AND ReplyId = @ReplyId
		DELETE FROM {databaseOwner}{objectQualifier}activeforums_Content WHERE ContentId = @ContentId 
	END
END
UPDATE {databaseOwner}{objectQualifier}activeforums_Topics
SET ReplyCount = ISNULL((Select Count(ReplyId) from {databaseOwner}{objectQualifier}activeforums_Replies WHERE TopicId = @TopicId AND IsDeleted = 0 AND IsApproved = 1),0)
WHERE TopicId = @TopicId
DECLARE @LastTopicReply int
SET @LastTopicReply = (SELECT MAX(ReplyId) from {databaseOwner}{objectQualifier}activeforums_Replies WHERE TopicId = @TopicId AND IsApproved = 1 AND IsDeleted = 0)
UPDATE {databaseOwner}{objectQualifier}activeforums_ForumTopics SET LastReplyId = IsNull(@LastTopicReply,0) WHERE ForumId = @ForumId and TopicId = @TopicId
exec {databaseOwner}{objectQualifier}activeforums_Forums_LastUpdates @ForumId
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_Move]
@PortalId int,
@ModuleId int,
@ForumId int,
@TopicId int
AS
DECLARE @OldForumId int
SELECT @OldForumId = ForumId FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics WHERE TopicId = @TopicId
If @OldForumId <> @ForumId 
	BEGIN
		UPDATE {databaseOwner}{objectQualifier}activeforums_ForumTopics SET ForumId = @ForumId WHERE TopicId = @TopicId AND ForumId = @OldForumId
		--UPDATE Counts
		DECLARE @LastPostId int
		-- New Forum
		DECLARE @LastReplyId int
		DECLARE @LastTopicId int
		SET @LastReplyId = (SELECT MAX(r.ReplyId) FROM {databaseOwner}{objectQualifier}activeforums_Replies as r inner join {databaseOwner}{objectQualifier}activeforums_topics as t on r.topicid = t.topicid inner join {databaseOwner}{objectQualifier}activeforums_ForumTopics as ft on t.topicid = ft.topicid  WHERE r.IsApproved = 1 AND r.IsDeleted = 0 AND ft.forumid = @ForumId)
		SET @LastTopicId = (SELECT MAX(t.TopicId) FROM {databaseOwner}{objectQualifier}activeforums_Topics as t inner join {databaseOwner}{objectQualifier}activeforums_ForumTopics as ft on t.topicid = ft.topicid  WHERE t.IsApproved = 1 AND t.IsDeleted = 0 AND ft.forumid = @ForumId)
		UPDATE {databaseOwner}{objectQualifier}activeforums_Forums SET LastReplyId = IsNull(@LastReplyId,0), LastTopicId = ISNULL(@LastTopicId,0) WHERE ForumId = @ForumId

		UPDATE {databaseOwner}{objectQualifier}activeforums_Forums SET LastPostId = ISNULL((CASE WHEN IsNull(@LastReplyId,0) > @LastTopicId THEN @LastReplyId ELSE @LastTopicId END),0), 
			TotalTopics = ISNULL((SELECT Count(TopicId) FROM {databaseOwner}{objectQualifier}vw_activeforums_TopicsView WHERE ForumId = @ForumId),0),
			TotalReplies = ISNULL((SELECT Count(ReplyId) FROM {databaseOwner}{objectQualifier}vw_activeforums_ForumReplies WHERE ForumId = @ForumId),0)
			WHERE ForumId = @ForumId
		-- Old Forum
		SET @LastReplyId = (SELECT MAX(r.ReplyId) FROM {databaseOwner}{objectQualifier}activeforums_Replies as r inner join {databaseOwner}{objectQualifier}activeforums_topics as t on r.topicid = t.topicid inner join {databaseOwner}{objectQualifier}activeforums_ForumTopics as ft on t.topicid = ft.topicid  WHERE r.IsApproved = 1 AND r.IsDeleted = 0 AND ft.forumid = @OldForumId )
		SET @LastTopicId = (SELECT MAX(t.TopicId) FROM {databaseOwner}{objectQualifier}activeforums_Topics as t inner join {databaseOwner}{objectQualifier}activeforums_ForumTopics as ft on t.topicid = ft.topicid  WHERE t.IsApproved = 1 AND t.IsDeleted = 0 AND ft.forumid = @OldForumId )
		UPDATE {databaseOwner}{objectQualifier}activeforums_Forums SET LastReplyId = IsNull(@LastReplyId,0), LastTopicId = ISNULL(@LastTopicId,0) WHERE ForumId = @OldForumId

		UPDATE {databaseOwner}{objectQualifier}activeforums_Forums SET LastPostId = ISNULL((CASE WHEN IsNull(@LastReplyId,0) > @LastTopicId THEN @LastReplyId ELSE @LastTopicId END),0), 
			TotalTopics = IsNULL((SELECT Count(TopicId) FROM {databaseOwner}{objectQualifier}vw_activeforums_TopicsView WHERE ForumId = @OldForumId),0),
			TotalReplies = IsNULL((SELECT Count(ReplyId) FROM {databaseOwner}{objectQualifier}vw_activeforums_ForumReplies WHERE ForumId = @OldForumId),0)
			WHERE ForumId = @OldForumId
		DELETE FROM {databaseOwner}{objectQualifier}activeforums_Forums_Tracking WHERE ForumId = @OldForumId AND MaxTopicRead = @TopicId
		UPDATE {databaseOwner}{objectQualifier}activeforums_Topics_Tracking SET ForumId = @ForumId WHERE TopicId = @TopicId AND ForumId = @OldForumId
	END
	exec {databaseOwner}{objectQualifier}activeforums_Forums_LastUpdates @ForumId
	exec {databaseOwner}{objectQualifier}activeforums_Forums_LastUpdates @OldForumId
GO
DECLARE forum_curs CURSOR FOR SELECT ForumId FROM {databaseOwner}{objectQualifier}activeforums_Forums
DECLARE @ForumId int
OPEN forum_curs 

FETCH NEXT FROM forum_curs INTO @ForumId

WHILE (@@fetch_status = 0)
BEGIN
	DECLARE @TopicDateCreated datetime
	DECLARE @ReplyDateCreated datetime
	DECLARE @Subject nvarchar(250)
	DECLARE @AuthorName nvarchar(150)
	DECLARE @AuthorId int
	DECLARE @LastDateTime datetime
	DECLARE @URL nvarchar(150)
	DECLARE @TopicId int
	DECLARE @ReplyId int
	SET @TopicDateCreated = (SELECT MAX(datecreated) from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_Topics as t on t.contentid = c.contentid and t.isapproved = 1 and t.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId)
	
	SET @ReplyDateCreated = (SELECT MAX(datecreated) from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_replies as r on r.contentid = c.contentid and r.isapproved = 1 and r.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_topics as t on t.topicid = r.topicid inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId)
	IF @ReplyDateCreated > @TopicDateCreated 
		BEGIN
			SET @Subject = (SELECT TOP 1 c.Subject from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_replies as r on r.contentid = c.contentid and r.isapproved = 1 and r.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_topics as t on t.topicid = r.topicid inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId ORDER BY c.DateCreated DESC)
			SET @AuthorName = (SELECT TOP 1 c.AuthorName from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_replies as r on r.contentid = c.contentid and r.isapproved = 1 and r.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_topics as t on t.topicid = r.topicid inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId ORDER BY c.DateCreated DESC)
			SET @AuthorId = (SELECT TOP 1 c.AuthorId from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_replies as r on r.contentid = c.contentid and r.isapproved = 1 and r.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_topics as t on t.topicid = r.topicid inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId ORDER BY c.DateCreated DESC)
			SET @ReplyId = (SELECT TOP 1 r.ReplyId from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_replies as r on r.contentid = c.contentid and r.isapproved = 1 and r.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_topics as t on t.topicid = r.topicid inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId ORDER BY c.DateCreated DESC)
			SET @TopicId = (SELECT TOP 1 r.TopicId from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_replies as r on r.contentid = c.contentid and r.isapproved = 1 and r.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_topics as t on t.topicid = r.topicid inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId ORDER BY c.DateCreated DESC)
			UPDATE {databaseOwner}{objectQualifier}activeforums_Forums 
				SET LastPostSubject = @Subject, LastPostAuthorName = @AuthorName, LastPostAuthorId = IsNull(@AuthorId,-1),
					LastPostDate = @ReplyDateCreated, LastTopicId = IsNull(@TopicId,0), LastReplyId = IsNull(@ReplyId,0)
				WHERE ForumId = @ForumId
		END
	ELSE
		BEGIN
			SET @Subject = (SELECT TOP 1 c.Subject from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_Topics as t on t.contentid = c.contentid and t.isapproved = 1 and t.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId ORDER BY c.DateCreated DESC)
			SET @TopicId = (SELECT TOP 1 t.TopicId from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_Topics as t on t.contentid = c.contentid and t.isapproved = 1 and t.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId ORDER BY c.DateCreated DESC)
			SET @AuthorName = (SELECT TOP 1 c.AuthorName from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_Topics as t on t.contentid = c.contentid and t.isapproved = 1 and t.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId ORDER BY c.DateCreated DESC)
			SET @AuthorId = (SELECT TOP 1 c.AuthorId from {databaseOwner}{objectQualifier}activeforums_content as c inner join {databaseOwner}{objectQualifier}activeforums_Topics as t on t.contentid = c.contentid and t.isapproved = 1 and t.isdeleted = 0 inner join {databaseOwner}{objectQualifier}activeforums_forumTopics as ft on ft.topicid = t.topicid
							WHERE ft.forumid = @ForumId ORDER BY c.DateCreated DESC)
			SET @ReplyId = 0

			UPDATE {databaseOwner}{objectQualifier}activeforums_Forums 
				SET LastPostSubject = @Subject, LastPostAuthorName = @AuthorName, LastPostAuthorId = IsNull(@AuthorId,-1), 
				LastPostDate = @TopicDateCreated, LastTopicId = IsNull(@TopicId,0), LastReplyId = IsNull(@ReplyId,0)
				WHERE ForumId = @ForumId
		END

	FETCH NEXT FROM forum_curs INTO @ForumId

END

CLOSE forum_curs

DEALLOCATE forum_curs
GO
