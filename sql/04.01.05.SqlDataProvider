
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_TP_GetPosts]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_TP_GetPosts]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Tags_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Tags_Delete]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles_Create]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_Create]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_MyTopicsView]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_MyTopicsView]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_MC_Forums]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_MC_Forums]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}vw_activeforums_ForumLastPosts]'))
DROP VIEW {databaseOwner}[{objectQualifier}vw_activeforums_ForumLastPosts]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_MC_Forums]
AS
DECLARE @SettingName nvarchar(100)
DECLARE @SettingValue nvarchar(100)
SET @SettingName = 'MCENABLED'
SET @SettingValue = 'true'
DECLARE @MailForums table (forumid int)
INSERT INTO @MailForums(forumid)
Select f.ForumId From {databaseOwner}{objectQualifier}activeforums_Forums as F 
	INNER JOIN {databaseOwner}{objectQualifier}Modules as M ON F.ModuleId = M.ModuleId
	INNER JOIN {databaseOwner}{objectQualifier}activeforums_Settings as S ON S.GroupKey = 'F:' + convert(varchar(20),f.forumid) AND S.SettingName = @SettingName
WHERE M.IsDeleted = 0 AND F.Active = 1 AND S.SettingValue = @SettingValue

SELECT *, TM.TabId from {databaseOwner}{objectQualifier}activeforums_Forums as F INNER JOIN @MailForums as M ON M.forumid = F.ForumId
	INNER JOIN {databaseOwner}{objectQualifier}TabModules as TM ON F.ModuleId = TM.ModuleId
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}activeforums_UI_MyTopicsView
	@PortalId int,
	@ModuleId int,
	@UserId int,
	@RowIndex int = 0,
	@MaxRows int = 20,
	@Sort nvarchar(10) = 'DESC',
	@IsSuperUser bit = 0
AS

DECLARE @RecordCount int

DECLARE @content TABLE 
	(
		contentId int, 
		authorId int,
		topicId int
	)
IF @IsSuperUser = 0
BEGIN
INSERT INTO @content (contentId, authorId, topicId)
Select t.contentId, tc.authorId, t.TopicId from {databaseOwner}{objectQualifier}activeforums_Topics as t INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_ForumTopics as ft ON t.TopicId = ft.TopicId INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_Forums as F on ft.ForumId = f.ForumId AND f.ModuleId = @ModuleId and f.PortalId = @PortalId INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_GetForumSecurity(@PortalId,@UserId, @IsSuperUser) as sec on ft.ForumId = sec.ForumId INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_Content as tc ON tc.ContentId = t.ContentId AND tc.AuthorId = @UserId AND t.IsApproved = 1 and t.IsDeleted = 0 and sec.[View] = 1
INSERT INTO @content (contentId, authorId, topicId)
Select r.contentId, rc.AuthorId, r.topicId from {databaseOwner}{objectQualifier}activeforums_Replies as r INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_Content as rc ON rc.ContentId = r.ContentId AND r.IsApproved = 1 AND r.IsDeleted = 0 INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_Topics as t ON r.TopicId = t.TopicId INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_ForumTopics as ft ON t.TopicId = ft.TopicId INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_Forums as F on ft.ForumId = f.ForumId AND f.ModuleId = @ModuleId and f.PortalId = @PortalId INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_GetForumSecurity(@PortalId,@UserId, @IsSuperUser) as sec on ft.ForumId = sec.ForumId 
	LEFT OUTER JOIN
	@content as cnt on cnt.topicid = r.TopicId
WHERE rc.AuthorId = @UserId  and sec.[View] = 1 AND cnt.topicid IS NULL
END
ELSE
BEGIN
INSERT INTO @content (contentId, authorId, topicId)
Select t.contentId, tc.authorId, t.TopicId from {databaseOwner}{objectQualifier}activeforums_Topics as t INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_ForumTopics as ft ON t.TopicId = ft.TopicId INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_Forums as F on ft.ForumId = f.ForumId AND f.ModuleId = @ModuleId and f.PortalId = @PortalId INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_Content as tc ON tc.ContentId = t.ContentId AND tc.AuthorId = @UserId AND t.IsApproved = 1 and t.IsDeleted = 0
INSERT INTO @content (contentId, authorId, topicId)
Select r.contentId, rc.AuthorId, r.topicId from {databaseOwner}{objectQualifier}activeforums_Replies as r INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_Content as rc ON rc.ContentId = r.ContentId AND r.IsApproved = 1 AND r.IsDeleted = 0 INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_Topics as t ON r.TopicId = t.TopicId INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_ForumTopics as ft ON t.TopicId = ft.TopicId INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_Forums as F on ft.ForumId = f.ForumId AND f.ModuleId = @ModuleId and f.PortalId = @PortalId
	LEFT OUTER JOIN
	@content as cnt on cnt.topicid = r.TopicId
WHERE rc.AuthorId = @UserId AND cnt.topicid IS NULL
END

DECLARE @topics TABLE 
	(
		topicId int
	)
INSERT INTO @Topics (topicId)
SELECT DISTINCT TopicId from @Content Order By TopicId

SET @RecordCount = (SELECT Count(TopicId) FROM @Topics)


	SELECT 
	ForumId,
	ForumName,
	LastReplyId,
	topics.TopicId,
	ViewCount,
	ReplyCount,
	IsLocked,
	IsPinned,
	TopicIcon,
	StatusId,
	IsAnnounce,
	AnnounceStart,
	AnnounceEnd,
	TopicType,
	[Subject],
	Summary,
	topics.AuthorId,
	AuthorName,
	Body,
	DateCreated,
	AuthorUserName,
	AuthorFirstName,
	AuthorLastName,
	AuthorDisplayName,
	LastReplySubject,
	LastReplySummary,
	LastReplyAuthorId,
	LastReplyAuthorName,
	LastReplyUserName,
	LastReplyFirstName,
	LastReplyLastName,
	LastReplyDisplayName,
	LastReplyDate,
	LastReplyRead,
	TopicRating,
	UserLastReplyRead,
	UserLastTopicRead,
	IsRead,
	"RecordCount" = @RecordCount
	FROM (

SELECT 
	f.ForumId,
	f.ForumName,
	IsNull(f.LastReplyId,0) as LastReplyId,
	t.TopicId,
	t.ViewCount,
	t.ReplyCount,
	t.IsLocked,
	t.IsPinned,
	IsNull(t.TopicIcon,'') as TopicIcon,
	t.StatusId,
	t.IsAnnounce,
	t.AnnounceStart,
	t.AnnounceEnd,
	t.TopicType,
	c.Subject,
	IsNull(c.Summary,'') as Summary,
	IsNull(c.AuthorId,-1) as AuthorId,
	IsNull(c.AuthorName,'') as AuthorName,
	c.Body,
	c.DateCreated,
	IsNull(u.Username,'') as AuthorUserName,
	IsNull(u.FirstName,'') as AuthorFirstName,
	IsNull(u.LastName,'') as AuthorLastName,
	IsNull(u.DisplayName,'') as AuthorDisplayName,
	CASE WHEN rc.Subject IS NULL THEN c.Subject ELSE rc.Subject END as LastReplySubject,
	CASE WHEN rc.Summary IS NULL THEN IsNull(c.Summary,'') ELSE rc.Summary END as LastReplySummary,
	CASE WHEN rc.AuthorId IS NULL THEN c.AuthorId ELSE rc.AuthorId END as LastReplyAuthorId,
	CASE WHEN rc.AuthorName IS NULL THEN IsNull(c.AuthorName,'') ELSE rc.AuthorName END  as LastReplyAuthorName,
	CASE WHEN ru.Username IS NULL THEN IsNull(u.UserName,'') ELSE ru.UserName END as LastReplyUserName,
	CASE WHEN ru.FirstName IS NULL THEN IsNULL(u.FirstName,'') ELSE ru.FirstName END as LastReplyFirstName,
	CASE WHEN ru.LastName IS NULL THEN IsNull(u.LastName,'') ELSE ru.LastName END as LastReplyLastName,
	CASE WHEN ru.DisplayName IS NULL THEN IsNull(IsNull(u.DisplayName,rc.AuthorName),'') ELSE ru.DisplayName END as LastReplyDisplayName,
	CASE WHEN rc.DateCreated IS NULL THEN c.DateCreated ELSE rc.DateCreated END  as LastReplyDate,
	CASE WHEN TT.LastReplyId < ISNULL(f.LastReplyId,0) THEN TT.LastReplyId ELSE 0 END AS LastReplyRead, 
	CASE WHEN FT.MaxReplyRead > TT.LastReplyId OR TT.LastReplyID IS NULL THEN ISNULL(FT.MaxReplyRead,0) ELSE TT.LastReplyId END AS UserLastReplyRead, 
	CASE WHEN FT.MaxTopicRead > TT.TopicId OR TT.TopicId IS NULL THEN ISNULL(FT.MaxTopicRead,0) ELSE TT.TopicId END AS UserLastTopicRead,
	CASE WHEN (ISNULL(TT.LastReplyID,0) = 0) OR F.LastReplyID <= tt.LastReplyId OR ISNULL(FT.MaxTopicRead,0) >= t.TopicId THEN 1 ELSE 0 END AS IsRead,
	(SELECT     ISNULL(AVG(Rating), 0) AS Expr1
                            FROM	{databaseOwner}{objectQualifier}activeforums_Topics_Ratings
                            WHERE      (TopicId = T.TopicId)) AS TopicRating, 
						ROW_NUMBER() OVER (ORDER BY 
								CASE
									WHEN rc.DateCreated IS NULL THEN c.DateCreated ELSE rc.DateCreated END DESC
											) as RowRank
				
		FROM	@topics as tmp INNER JOIN
				{databaseOwner}{objectQualifier}activeforums_Topics as t on tmp.TopicId = t.TopicId INNER JOIN			
				{databaseOwner}{objectQualifier}activeforums_ForumTopics AS ftt ON ftt.TopicId = t.TopicId INNER JOIN
				{databaseOwner}{objectQualifier}activeforums_forums as f ON ftt.forumId = f.ForumId INNER JOIN
				{databaseOwner}{objectQualifier}activeforums_Content as c on t.ContentId = c.ContentId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}Users as u on c.AuthorId = u.UserId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}activeforums_Replies as r on ftt.LastReplyId = r.ReplyId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}activeforums_Content as rc on r.ContentId = rc.ContentId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}Users as ru on rc.AuthorId = ru.UserId LEFT OUTER JOIN				
                {databaseOwner}{objectQualifier}activeforums_Topics_Tracking AS TT ON T.TopicId = TT.TopicId AND TT.UserId = @UserId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}activeforums_Forums_Tracking as FT ON f.ForumId = FT.ForumId AND FT.UserId = @UserId
		WHERE f.PortalId = @PortalId AND f.ModuleId = @ModuleId
	) AS topics 
	WHERE RowRank > @RowIndex AND RowRank <= (@RowIndex + @MaxRows)
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_Create]
@PortalId int,
@ModuleId int,
@UserId int
AS
IF NOT EXISTS(Select ProfileId FROM {databaseOwner}{objectQualifier}activeforums_UserProfiles WHERE UserId = @UserId AND PortalId = @PortalId)
	BEGIN
	DECLARE @MemberSince datetime
	SELECT @MemberSince = CreatedDate FROM {databaseOwner}{objectQualifier}UserPortals WHERE UserId = @UserId AND PortalId = @PortalId
	INSERT INTO {databaseOwner}{objectQualifier}activeforums_UserProfiles
		(UserId, ModuleId, PortalId, DateCreated, DateLastActivity)
		VALUES
		(@UserId, @ModuleId, @PortalId, IsNull(@MemberSince,GetDate()), GetDate())
	DECLARE @TopicCount int 
	DECLARE @ReplyCount int
	SELECT @TopicCount = Count(*) FROM {databaseOwner}{objectQualifier}activeforums_Topics as T INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Content as C ON T.ContentId = C.ContentId
	WHERE c.authorid = @UserId
	SELECT @ReplyCount = Count(*) FROM {databaseOwner}{objectQualifier}activeforums_Replies as R INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Content as C ON R.ContentId = C.ContentId
	WHERE c.authorid = @UserId
	UPDATE {databaseOwner}{objectQualifier}activeforums_UserProfiles
		SET TopicCount = @TopicCount, ReplyCount = @ReplyCount WHERE UserId = @UserId AND PortalId = @PortalId
	END
GO


CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Tags_Delete]
	@PortalId int,
	@ModuleId int,
	@TagId int,
	@TopicId int
AS
	IF @TopicId = -1
	DELETE FROM {databaseOwner}{objectQualifier}activeforums_Tags WHERE PortalId = @PortalId AND ModuleId = @ModuleId AND TagId = @TagId
	ELSE
	DELETE FROM {databaseOwner}{objectQualifier}activeforums_Topics_Tags WHERE TopicId = @TopicId
GO


CREATE PROCEDURE {databaseOwner}{objectQualifier}activeforums_TP_GetPosts
@Forums varchar(1000),
@TopicsOnly bit,
@RandomOrder bit,
@Rows int,
@UserId int,
@IgnoreSecurity bit = 0,
@IsSuperUser bit = 0,
@Tags nvarchar(400),
@FilterByUserId int = -1
AS
DECLARE @sec TABLE (SecurityKey varchar(255), CanView bit)
BEGIN
INSERT INTO @sec (SecurityKey, CanView)
		SELECT DISTINCT S.SecurityKey,CASE WHEN @IsSuperUser = 1 THEN 1 ELSE IsNull(MAX(Convert(int,S.[View])),0)END as [CanView]
	FROM  {databaseOwner}{objectQualifier}activeforums_Security AS S LEFT OUTER JOIN
		  {databaseOwner}{objectQualifier}UserRoles AS R ON S.ObjectId = R.RoleID
	WHERE (@IsSuperUser = 1) OR
		(
		(S.[View] = 1)
		AND  
		(
			(
				(R.EffectiveDate IS NULL) AND (R.ExpiryDate >= GETDATE()) OR
				(R.EffectiveDate IS NULL) AND (R.ExpiryDate IS NULL) OR
				(R.EffectiveDate <= GETDATE()) AND (R.ExpiryDate IS NULL) OR
				(R.EffectiveDate <= GETDATE()) AND (R.ExpiryDate >= GETDATE()))
				AND
				R.UserId = @UserId AND @UserId > 0
			)
			OR
		 	(
				(@UserId = -1 AND S.ObjectId = -3)
				OR
				(S.ObjectId = -1)
			)
		)
	Group By s.SecurityKey
END
SET ROWCOUNT @Rows
IF @RandomOrder = 1 AND @TopicsOnly = 1
	BEGIN
		SELECT	g.GroupName, g.ForumGroupId, M.TabId, M.ModuleId, T.ForumName, T.ForumId, T.[Subject],
				T.AuthorId, T.AuthorUserName, T.AuthorFirstName, T.AuthorLastName, T.AuthorDisplayName, T.DateCreated,
				T.Body, T.ReplyCount, T.TopicId, "ReplyId" = 0
		FROM {databaseOwner}{objectQualifier}vw_activeforums_TopicsView as T 
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Functions_Split(@Forums,':') as F on T.ForumId = F.ID 
			INNER JOIN {databaseOwner}{objectQualifier}TabModules as M ON T.ModuleId = M.ModuleId
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as af ON T.ForumId = af.ForumId
			INNER JOIN @sec as s ON af.ForumSecurityKey = s.SecurityKey
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Groups as g on af.ForumGroupId = g.ForumGroupId
		WHERE @Tags = '' OR (@Tags <> '' AND T.TopicId IN (
													SELECT tt.TopicId FROM {databaseOwner}{objectQualifier}activeforums_Tags as tag
													 INNER JOIN {databaseOwner}{objectQualifier}activeforums_Topics_Tags as TT ON tag.TagId = tt.TagId 
													WHERE     tag.TagName = @Tags AND tag.Moduleid = t.ModuleId))
		ORDER BY NewID()
	END
IF @RandomOrder = 0 AND @TopicsOnly = 1
	BEGIN
		SELECT	g.GroupName, g.ForumGroupId, M.TabId, M.ModuleId, T.ForumName, T.ForumId, T.[Subject],
				T.AuthorId, T.AuthorUserName, T.AuthorFirstName, T.AuthorLastName, T.AuthorDisplayName, T.DateCreated,
				T.Body, T.ReplyCount, T.TopicId, "ReplyId" = 0, s.CanView
		FROM {databaseOwner}{objectQualifier}vw_activeforums_TopicsView as T 
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Functions_Split(@Forums,':') as F on T.ForumId = F.ID 
			INNER JOIN {databaseOwner}{objectQualifier}TabModules as M ON T.ModuleId = M.ModuleId
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as af ON T.ForumId = af.ForumId
			INNER JOIN @sec as s ON af.ForumSecurityKey = s.SecurityKey
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Groups as g on af.ForumGroupId = g.ForumGroupId
		WHERE (s.CanView = 1 AND @IgnoreSecurity = 0 OR s.CanView >= 0 AND @IgnoreSecurity = 1)
		AND (@FilterByUserId = -1 OR T.AuthorId = @FilterByUserId)
		AND (@Tags = '' OR (@Tags <> '' AND T.TopicId IN (
													SELECT tt.TopicId FROM {databaseOwner}{objectQualifier}activeforums_Tags as tag
													 INNER JOIN {databaseOwner}{objectQualifier}activeforums_Topics_Tags as TT ON tag.TagId = tt.TagId 
													WHERE     tag.TagName = @Tags AND tag.Moduleid = t.ModuleId))
			)
		ORDER BY T.DateCreated DESC
	END
IF @RandomOrder = 0 AND @TopicsOnly = 0 
	BEGIN
		SELECT g.GroupName, g.ForumGroupId, M.TabId, M.ModuleId, AF.ForumName, T.ForumId,
				T.LastPostSubject as [Subject], T.LastPostAuthorId as AuthorId,
				T.LastPostUserName AS AuthorUserName, T.LastPostFirstName as AuthorFirstName,
				T.LastPostLastName AS AuthorLastName, T.LastPostDisplayName AS AuthorDisplayName,
				T.LastPostDateTime AS DateCreated,
				"ReplyCount" = 0, T.TopicId, T.ReplyId,
				CASE 
					WHEN T.LastPostId = T.TopicId THEN 
					(SELECT c.Body FROM {databaseOwner}{objectQualifier}activeforums_Content as c INNER JOIN {databaseOwner}{objectQualifier}activeforums_Topics as at ON at.ContentId = c.ContentId WHERE at.TopicId = T.TopicId AND at.IsApproved = 1 and at.IsDeleted = 0) ELSE
					(SELECT c.Body FROM {databaseOwner}{objectQualifier}activeforums_Content as c INNER JOIN {databaseOwner}{objectQualifier}activeforums_Replies as ar ON ar.ContentId = c.ContentId WHERE ar.ReplyId = T.ReplyId AND ar.IsApproved = 1 AND ar.IsDeleted = 0)  END
				AS Body
		FROM {databaseOwner}{objectQualifier}vw_activeforums_ForumLastPosts as T
		INNER JOIN {databaseOwner}{objectQualifier}activeforums_Functions_Split(@Forums,':') as F on T.ForumId = F.ID 
		INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as AF on AF.ForumId = T.ForumId
		INNER JOIN @sec as s ON af.ForumSecurityKey = s.SecurityKey
		INNER JOIN {databaseOwner}{objectQualifier}activeforums_Groups as g on af.ForumGroupId = g.ForumGroupId
		INNER JOIN {databaseOwner}{objectQualifier}TabModules as M ON AF.ModuleId = M.ModuleId
		WHERE (@Tags = '' OR (@Tags <> '' AND T.TopicId IN (
													SELECT tt.TopicId FROM {databaseOwner}{objectQualifier}activeforums_Tags as tag
													 INNER JOIN {databaseOwner}{objectQualifier}activeforums_Topics_Tags as TT ON tag.TagId = tt.TagId 
													WHERE     tag.TagName = @Tags AND tag.Moduleid = AF.ModuleId))
			)
		ORDER BY T.LastPostDateTime DESC
	END
IF @RandomOrder = 1 AND @TopicsOnly = 0 
	BEGIN
		SELECT g.GroupName, g.ForumGroupId, M.TabId, M.ModuleId, AF.ForumName, T.ForumId,
				T.LastPostSubject as [Subject], T.LastPostAuthorId as AuthorId,
				T.LastPostUserName AS AuthorUserName, T.LastPostFirstName as AuthorFirstName,
				T.LastPostLastName AS AuthorLastName, T.LastPostDisplayName AS AuthorDisplayName,
				T.LastPostDateTime AS DateCreated,
				"ReplyCount" = 0, T.TopicId, T.ReplyId,
				CASE 
					WHEN T.LastPostId = T.TopicId THEN 
					(SELECT c.Body FROM {databaseOwner}{objectQualifier}activeforums_Content as c INNER JOIN {databaseOwner}{objectQualifier}activeforums_Topics as at ON at.ContentId = c.ContentId WHERE at.TopicId = T.TopicId AND at.IsApproved = 1 and at.IsDeleted = 0) ELSE
					(SELECT c.Body FROM {databaseOwner}{objectQualifier}activeforums_Content as c INNER JOIN {databaseOwner}{objectQualifier}activeforums_Replies as ar ON ar.ContentId = c.ContentId WHERE ar.ReplyId = T.ReplyId AND ar.IsApproved = 1 AND ar.IsDeleted = 0)  END
				AS Body
		FROM {databaseOwner}{objectQualifier}vw_activeforums_ForumLastPosts as T
		INNER JOIN {databaseOwner}{objectQualifier}activeforums_Functions_Split(@Forums,':') as F on T.ForumId = F.ID 
		INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as AF on AF.ForumId = T.ForumId
		INNER JOIN @sec as s ON af.ForumSecurityKey = s.SecurityKey
		INNER JOIN {databaseOwner}{objectQualifier}activeforums_Groups as g on af.ForumGroupId = g.ForumGroupId
		INNER JOIN {databaseOwner}{objectQualifier}TabModules as M ON AF.ModuleId = M.ModuleId
		WHERE (@Tags = '' OR (@Tags <> '' AND T.TopicId IN (
													SELECT tt.TopicId FROM {databaseOwner}{objectQualifier}activeforums_Tags as tag
													 INNER JOIN {databaseOwner}{objectQualifier}activeforums_Topics_Tags as TT ON tag.TagId = tt.TagId 
													WHERE     tag.TagName = @Tags AND tag.Moduleid = AF.ModuleId))
			)
		ORDER BY NewId()
	END
GO

CREATE VIEW {databaseOwner}{objectQualifier}vw_activeforums_ForumLastPosts
AS
SELECT     TOP (100) PERCENT FT.ForumId, vft.TopicId, ISNULL(vfr.ReplyId, 0) AS ReplyId, ISNULL(vft.Subject, '') AS Subject, ISNULL(CASE WHEN vfr.ReplyId IS NULL 
                      THEN vft.TopicId ELSE vfr.ReplyId END, 0) AS LastPostId, ISNULL(CASE WHEN vfr.Subject IS NULL THEN vft.Subject ELSE vfr.Subject END, '') AS LastPostSubject, 
                      CASE WHEN vfr.Summary IS NULL THEN vft.Summary ELSE vfr.Subject END AS LastPostSummary, CASE WHEN vfr.AuthorId IS NULL 
                      THEN vft.AuthorId ELSE vfr.AuthorId END AS LastPostAuthorId, CASE WHEN vfr.AuthorId IS NULL THEN vft.UserName ELSE IsNull(vfr.UserName, 
                      IsNull(vfr.AuthorName, 'anon')) END AS LastPostUserName, CASE WHEN vfr.AuthorId IS NULL THEN vft.FirstName ELSE IsNull(vfr.FirstName, '') 
                      END AS LastPostFirstName, CASE WHEN vfr.AuthorId IS NULL THEN vft.LastName ELSE IsNull(vfr.LastName, '') END AS LastPostLastName, 
                      CASE WHEN vfr.AuthorId IS NULL THEN vft.DisplayName ELSE IsNull(vfr.DisplayName, IsNull(vfr.AuthorName, 'anon')) END AS LastPostDisplayName, 
                      CASE WHEN vfr.DateCreated IS NULL THEN vft.DateCreated ELSE vfr.DateCreated END AS LastPostDateTime
FROM         {databaseOwner}{objectQualifier}activeforums_ForumTopics AS FT INNER JOIN
                     {databaseOwner}{objectQualifier}vw_activeforums_ForumTopics AS vft ON FT.TopicId = vft.TopicId AND vft.IsApproved = 1 LEFT OUTER JOIN
                      {databaseOwner}{objectQualifier}vw_activeforums_ForumReplies AS vfr ON FT.LastReplyId = vfr.ReplyId AND vfr.IsApproved = 1
ORDER BY LastPostDateTime DESC

GO

