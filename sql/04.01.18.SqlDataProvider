IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}activeforums_TP_GetPosts') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}activeforums_TP_GetPosts
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}activeforums_Search_Standard') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}activeforums_Search_Standard
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}activeforums_Search_Standard
	@PortalId int,
	@ModuleId int,
	@UserId int,
	@ForumId int,
	@IsSuperUser bit,
	@RowIndex int = 0,
	@MaxRows int = 20,
	@SearchString nvarchar(200), 
	@MatchType int = 0,
	@SearchField int = 0,--0=Subject&Body, 1= Subject, 2=Body
	@Timespan int = 0,
	@AuthorId int = 0,
	@Author nvarchar(200),
	@Forums varchar(8000),
	@Tags nvarchar(400)
as
IF @AuthorId = 0 AND @Author != ''
	BEGIN
		DECLARE @DisplayOpt varchar(50)
		SELECT @DisplayOpt = SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE ModuleId = @ModuleId AND SettingName = 'USERNAMEDISPLAY'
		If @DisplayOpt = 'Fullname' 
			SET @DisplayOpt = 'FirstName  + '' '' + LastName '
		DECLARE @sql nvarchar(2000)
		SET @sql = N'SELECT @RET = UserId FROM {databaseOwner}{objectQualifier}Users WHERE ' + @DisplayOpt + ' = ''' + @Author + ''''
		print @sql
		exec sp_executesql @stmt = @sql, @params = N'@RET as INT OUTPUT', @ret = @AuthorId OUTPUT;
		if @AuthorId = 0 SET @AuthorId = -1
	END
DECLARE @RowCount int
-- SeachString:  String of 1 or more search terms, all separated by spaces
-- MatchType: 0=match any, 1 =match all, 2 = exact match of entire expression only
-- Results are returned in order of relevance
declare @i1 int;
declare @i2 int;

declare @Word nvarchar(200);
declare @Words table (Word nvarchar(200) not null);
declare @WordCount as integer;

set nocount on
-- Parse the SearchString to extract all words:
if (@SearchString <> '') 
BEGIN
if (@MatchType != 2)
  begin
  set @SearchString = ' ' + @SearchString  + ' ';
  set @i1 = 1;
  while (@i1 != 0)
    begin
    set @i2=charindex(' ', @SearchString, @i1+1)
    if (@i2 != 0)
      begin
      set @Word = rtrim(ltrim(substring(@SearchString, @i1+1, @i2-@i1)))
      if @Word != '' insert into @Words select @Word
		if (@MatchType != 1)
		if UPPER(RIGHT(@Word,1)) = 'S' insert into @Words select LEFT(@Word,LEN(@Word)-1) ELSE insert into @Words select @Word + 's'
      end
    set @i1 = @i2
    end
  end
else
  insert into @Words select ltrim(rtrim(@SearchString))

-- Get the total # of words:
set @WordCount = (select count(*) from @Words)
END
-- Return Results in order of relevance:
DECLARE @tmpResults TABLE (topicid int,contentid int, rownum int, matchpct decimal(15,4))

INSERT INTO @tmpResults(topicid,contentid, matchpct,rownum)
		SELECT TopicId,contentid, hits.MatchPct, ROW_NUMBER() OVER (ORDER BY hits.MatchPct DESC, DateCreated DESC) as RowRank FROM
				(
					SELECT  t.topicid,t.datecreated,t.contentid			
					FROM         {databaseOwner}{objectQualifier}vw_activeforums_TopicView AS T INNER JOIN 
					{databaseOwner}{objectQualifier}activeforums_Forums as F ON T.ForumId = F.ForumId INNER JOIN
					{databaseOwner}{objectQualifier}activeforums_GetForumSecurity(@PortalId, @UserId, @IsSuperUser) as sec ON F.ForumId = sec.ForumId AND sec.[Read] = 1 INNER JOIN
					{databaseOwner}{objectQualifier}activeforums_Content AS C ON T.ContentId = C.ContentId 
						WHERE T.PortalId = @PortalId AND T.ModuleId = @ModuleId AND 
						(@TimeSpan = 0 OR DATEDIFF(hh,T.DateCreated,GetDate()) <= @TimeSpan) AND
						(@AuthorId = 0 OR T.AuthorId = @AuthorId) AND
						(@ForumId <= 0 OR T.ForumId =  @ForumId) AND
						(@Tags = '' OR (@Tags <> '' AND T.TopicId IN (
														SELECT TopicId FROM {databaseOwner}{objectQualifier}activeforums_Tags INNER JOIN
														{databaseOwner}{objectQualifier}activeforums_Topics_Tags ON {databaseOwner}{objectQualifier}activeforums_Tags.TagId = {databaseOwner}{objectQualifier}activeforums_Topics_Tags.TagId
														WHERE	{databaseOwner}{objectQualifier}activeforums_Tags.TagName = @Tags))) AND
						(@SearchString <> '' OR @Tags <> '' OR @AuthorId > 0) AND
						(@Forums = '' OR T.ForumId IN (SELECT id FROM {databaseOwner}{objectQualifier}activeforums_Functions_Split(@Forums,':')))
			) as results LEFT OUTER JOIN
				(
					SELECT ContentId as cid, MatchPct FROM (SELECT C.ContentId, Count(*)  * 1.0 / @WordCount as MatchPct 
					FROM {databaseOwner}{objectQualifier}activeforums_Content C INNER JOIN 
					@Words W on 
					CASE @SearchField
									WHEN 0 THEN ' ' + Convert(nvarchar(max),c.Body) + ' ' + c.Subject + ' '
									WHEN 1 THEN ' ' + c.Subject + ' '
									WHEN 2 THEN ' ' + Convert(nvarchar(max),c.Body) + ' '
								END like '%[^a-z]' + Word + '[^a-z]%'
							GROUP BY ContentId) as hits
							WHERE MatchPct = 1 or @MatchType <> 1 
				) as hits ON results.ContentId = hits.cid
		

SELECT Count(*) from @tmpResults WHERE (MatchPct IS NOT NULL AND @SearchString <> '' OR @Tags <> '' OR @AuthorId > 0)
SELECT T.PortalId, T.ModuleId, T.ForumId, T.ForumName, T.TopicId, T.ReplyId, IsNull(T.Subject,'') as Subject,
	 T.Summary, T.AuthorId, IsNull(T.AuthorName,'') as AuthorName, IsNull(T.Username,'') as UserName, IsNull(T.FirstName,'') as FirstName, 
		IsNull(T.LastName,'') as LastName, IsNull(T.DisplayName,'') as DisplayName, T.DateCreated, 
                      T.DateUpdated, T.ContentId, TopicIcon, StatusId, TopicType, IsPinned, IsLocked, ViewCount, ReplyCount,IsNull(c.Body,'') as Body FROM         
			{databaseOwner}{objectQualifier}vw_activeforums_TopicView AS T INNER JOIN
					@tmpResults AS r ON T.contentid = r.contentid INNER JOIN
					{databaseOwner}{objectQualifier}activeforums_Content as c ON c.ContentId = t.ContentId
WHERE rownum > @RowIndex AND rownum <= (@RowIndex + @MaxRows)
ORDER BY  T.DateCreated DESC,MatchPct DESC
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}activeforums_TP_GetPosts
@PortalId int,
@Forums nvarchar(1000),
@TopicsOnly bit,
@RandomOrder bit,
@Rows int,
@UserId int,
@IgnoreSecurity bit = 0,
@IsSuperUser bit = 0,
@Tags nvarchar(400),
@FilterByUserId int = -1
AS
--SET ROWCOUNT @Rows
IF @RandomOrder = 1 AND @TopicsOnly = 1
	BEGIN
		SELECT * FROM (
		SELECT	g.GroupName, g.ForumGroupId, M.TabId, M.ModuleId, T.ForumName, T.ForumId, T.[Subject],
				T.AuthorId, T.AuthorUserName, T.AuthorFirstName, T.AuthorLastName, T.AuthorDisplayName, T.DateCreated,
				T.Body, T.ReplyCount, T.TopicId, "ReplyId" = 0,ROW_NUMBER() OVER (ORDER BY NewID()) as RowRank
		FROM {databaseOwner}{objectQualifier}vw_activeforums_TopicsView as T 
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_GetForumSecurity(@PortalId, @UserId, @IsSuperUser) as sec ON T.ForumId = sec.ForumId AND sec.[Read] = 1
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Functions_Split(@Forums,':') as F on sec.ForumId = F.ID 			
			INNER JOIN {databaseOwner}{objectQualifier}TabModules as M ON T.ModuleId = M.ModuleId
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as af ON T.ForumId = af.ForumId
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Groups as g on af.ForumGroupId = g.ForumGroupId
		WHERE @Tags = '' OR (@Tags <> '' AND T.TopicId IN (
													SELECT tt.TopicId FROM {databaseOwner}{objectQualifier}activeforums_Tags as tag
													 INNER JOIN {databaseOwner}{objectQualifier}activeforums_Topics_Tags as TT ON tag.TagId = tt.TagId 
													WHERE     tag.TagName = @Tags AND tag.Moduleid = t.ModuleId))
		) as posts WHERE RowRank <=@Rows
	END
IF @RandomOrder = 0 AND @TopicsOnly = 1
	BEGIN
		SELECT * FROM (
		SELECT	g.GroupName, g.ForumGroupId, M.TabId, M.ModuleId, T.ForumName, T.ForumId, T.[Subject],
				T.AuthorId, T.AuthorUserName, T.AuthorFirstName, T.AuthorLastName, T.AuthorDisplayName, T.DateCreated,
				T.Body, T.ReplyCount, T.TopicId, "ReplyId" = 0, sec.[View] as CanView,ROW_NUMBER() OVER (ORDER BY T.DateCreated DESC) as RowRank
		FROM {databaseOwner}{objectQualifier}vw_activeforums_TopicsView as T 
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_GetForumSecurity(@PortalId, @UserId, @IsSuperUser) as sec ON sec.ForumId = t.ForumId
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Functions_Split(@Forums,':') as F on sec.ForumId = F.ID 			
			INNER JOIN {databaseOwner}{objectQualifier}TabModules as M ON T.ModuleId = M.ModuleId
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as af ON f.ID = af.ForumId
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Groups as g on af.ForumGroupId = g.ForumGroupId
		WHERE ((sec.[View] = 1 AND @IgnoreSecurity = 0) OR (sec.[View] >= 0 AND @IgnoreSecurity = 1))
		AND (@FilterByUserId = -1 OR T.AuthorId = @FilterByUserId)
		AND (@Tags = '' OR (@Tags <> '' AND T.TopicId IN (
													SELECT tt.TopicId FROM {databaseOwner}{objectQualifier}activeforums_Tags as tag
													 INNER JOIN {databaseOwner}{objectQualifier}activeforums_Topics_Tags as TT ON tag.TagId = tt.TagId 
													WHERE     tag.TagName = @Tags AND tag.Moduleid = t.ModuleId))
			)
		) as posts WHERE RowRank <=@Rows
	END
IF @RandomOrder = 0 AND @TopicsOnly = 0 
	BEGIN
		SELECT * FROM (
		SELECT g.GroupName, g.ForumGroupId, M.TabId, M.ModuleId, AF.ForumName, T.ForumId,
				T.Subject as [Subject], T.AuthorId as AuthorId,
				T.Username AS AuthorUserName, T.FirstName as AuthorFirstName,
				T.LastName AS AuthorLastName, T.DisplayName AS AuthorDisplayName,
				T.DateUpdated AS DateCreated,
				"ReplyCount" = 0, T.TopicId, T.ReplyId,
				c.Body,ROW_NUMBER() OVER (ORDER BY T.DateUpdated DESC) as RowRank
		FROM {databaseOwner}{objectQualifier}vw_activeforums_TopicView as T
		INNER JOIN {databaseOwner}{objectQualifier}activeforums_GetForumSecurity(@PortalId, @UserId, @IsSuperUser) as sec ON T.ForumId = sec.ForumId AND sec.[Read] = 1
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Functions_Split(@Forums,':') as F on sec.ForumId = F.ID 			
			INNER JOIN {databaseOwner}{objectQualifier}TabModules as M ON T.ModuleId = M.ModuleId
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as af ON T.ForumId = af.ForumId
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Groups as g on af.ForumGroupId = g.ForumGroupId
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Content as c on c.ContentId = T.ContentId
		WHERE (@Tags = '' OR (@Tags <> '' AND T.TopicId IN (
													SELECT tt.TopicId FROM {databaseOwner}{objectQualifier}activeforums_Tags as tag
													 INNER JOIN {databaseOwner}{objectQualifier}activeforums_Topics_Tags as TT ON tag.TagId = tt.TagId 
													WHERE     tag.TagName = @Tags AND tag.Moduleid = AF.ModuleId))
			)
		) as Posts WHERE RowRank <= @Rows
	END
IF @RandomOrder = 1 AND @TopicsOnly = 0 
	BEGIN
		SELECT * FROM (
		SELECT g.GroupName, g.ForumGroupId, M.TabId, M.ModuleId, AF.ForumName, T.ForumId,
				T.Subject as [Subject], T.AuthorId as AuthorId,
				T.Username AS AuthorUserName, T.FirstName as AuthorFirstName,
				T.LastName AS AuthorLastName, T.DisplayName AS AuthorDisplayName,
				T.DateUpdated AS DateCreated,
				"ReplyCount" = 0, T.TopicId, T.ReplyId,
				c.Body,ROW_NUMBER() OVER (ORDER BY NEWID() DESC) as RowRank
		FROM {databaseOwner}{objectQualifier}vw_activeforums_TopicView as T
		INNER JOIN {databaseOwner}{objectQualifier}activeforums_GetForumSecurity(@PortalId, @UserId, @IsSuperUser) as sec ON T.ForumId = sec.ForumId AND sec.[Read] = 1
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Functions_Split(@Forums,':') as F on sec.ForumId = F.ID 			
			INNER JOIN {databaseOwner}{objectQualifier}TabModules as M ON T.ModuleId = M.ModuleId
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as af ON T.ForumId = af.ForumId
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Groups as g on af.ForumGroupId = g.ForumGroupId
			INNER JOIN {databaseOwner}{objectQualifier}activeforums_Content as c on c.ContentId = T.ContentId
		WHERE (@Tags = '' OR (@Tags <> '' AND T.TopicId IN (
													SELECT tt.TopicId FROM {databaseOwner}{objectQualifier}activeforums_Tags as tag
													 INNER JOIN {databaseOwner}{objectQualifier}activeforums_Topics_Tags as TT ON tag.TagId = tt.TagId 
													WHERE     tag.TagName = @Tags AND tag.Moduleid = AF.ModuleId))
			)
		) as Posts WHERE RowRank <=@Rows
		
	END
GO
