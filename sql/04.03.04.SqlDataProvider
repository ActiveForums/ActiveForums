IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_MyTopicsView]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_MyTopicsView]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_MyTopicsView]
	@PortalId int,
	@ModuleId int,
	@UserId int,
	@RowIndex int = 0,
	@MaxRows int = 20,
	@Sort nvarchar(10) = 'DESC',
	@IsSuperUser bit = 0
AS

DECLARE @RecordCount int

DECLARE @content TABLE 
	(
		contentId int, 
		authorId int,
		topicId int
	)
INSERT INTO @content (contentId, authorId, topicId)
Select t.contentId, tc.authorId, t.TopicId from {databaseOwner}{objectQualifier}activeforums_Topics as t INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_ForumTopics as ft ON t.TopicId = ft.TopicId INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_Forums as F on ft.ForumId = f.ForumId AND f.ModuleId = @ModuleId and f.PortalId = @PortalId INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_Content as tc ON tc.ContentId = t.ContentId AND tc.AuthorId = @UserId AND t.IsApproved = 1 and t.IsDeleted = 0
INSERT INTO @content (contentId, authorId, topicId)
Select r.contentId, rc.AuthorId, r.topicId from {databaseOwner}{objectQualifier}activeforums_Replies as r INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_Content as rc ON rc.ContentId = r.ContentId AND r.IsApproved = 1 AND r.IsDeleted = 0 INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_Topics as t ON r.TopicId = t.TopicId INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_ForumTopics as ft ON t.TopicId = ft.TopicId INNER JOIN
	{databaseOwner}{objectQualifier}activeforums_Forums as F on ft.ForumId = f.ForumId AND f.ModuleId = @ModuleId and f.PortalId = @PortalId
	LEFT OUTER JOIN
	@content as cnt on cnt.topicid = r.TopicId
WHERE rc.AuthorId = @UserId AND cnt.topicid IS NULL

DECLARE @topics TABLE 
	(
		topicId int
	)
INSERT INTO @Topics (topicId)
SELECT DISTINCT TopicId from @Content Order By TopicId

SET @RecordCount = (SELECT Count(TopicId) FROM @Topics)


	SELECT 
	topics.ForumId,
	topics.ForumName,
	topics.LastReplyId,
	topics.TopicId,
	topics.ViewCount,
	topics.ReplyCount,
	topics.IsLocked,
	topics.IsPinned,
	topics.TopicIcon,
	topics.StatusId,
	topics.IsAnnounce,
	topics.AnnounceStart,
	topics.AnnounceEnd,
	topics.TopicType,
	[Subject],
	Summary,
	topics.AuthorId,
	AuthorName,
	Body,
	topics.DateCreated,
	AuthorUserName,
	AuthorFirstName,
	AuthorLastName,
	AuthorDisplayName,
	LastReplySubject,
	LastReplySummary,
	LastReplyAuthorId,
	LastReplyAuthorName,
	LastReplyUserName,
	LastReplyFirstName,
	LastReplyLastName,
	LastReplyDisplayName,
	LastReplyDate,
	LastReplyRead,
	TopicRating,
	UserLastReplyRead,
	UserLastTopicRead,
	IsRead,
	TopicLastReplyId,
	"RecordCount" = @RecordCount,
	ISNULL(t.URL,'') as  TopicURL,
		ISNULL(f.PrefixURL,'') as ForumUrl,
		ISNULL(g.PrefixURL,'') as GroupUrl,
		g.ForumGroupId
	FROM (

SELECT 
	f.ForumId,
	f.ForumName,
	IsNull(f.LastReplyId,0) as LastReplyId,
	t.TopicId,
	t.ViewCount,
	t.ReplyCount,
	t.IsLocked,
	t.IsPinned,
	IsNull(t.TopicIcon,'') as TopicIcon,
	t.StatusId,
	t.IsAnnounce,
	t.AnnounceStart,
	t.AnnounceEnd,
	t.TopicType,
	c.Subject,
	IsNull(c.Summary,'') as Summary,
	IsNull(c.AuthorId,-1) as AuthorId,
	IsNull(c.AuthorName,'') as AuthorName,
	c.Body,
	c.DateCreated,
	IsNull(u.Username,'') as AuthorUserName,
	IsNull(u.FirstName,'') as AuthorFirstName,
	IsNull(u.LastName,'') as AuthorLastName,
	IsNull(u.DisplayName,'') as AuthorDisplayName,
	CASE WHEN rc.Subject IS NULL THEN c.Subject ELSE rc.Subject END as LastReplySubject,
	CASE WHEN rc.Summary IS NULL THEN IsNull(c.Summary,'') ELSE rc.Summary END as LastReplySummary,
	CASE WHEN rc.AuthorId IS NULL THEN c.AuthorId ELSE rc.AuthorId END as LastReplyAuthorId,
	CASE WHEN rc.AuthorName IS NULL THEN IsNull(c.AuthorName,'') ELSE rc.AuthorName END  as LastReplyAuthorName,
	CASE WHEN ru.Username IS NULL THEN IsNull(u.UserName,'') ELSE ru.UserName END as LastReplyUserName,
	CASE WHEN ru.FirstName IS NULL THEN IsNULL(u.FirstName,'') ELSE ru.FirstName END as LastReplyFirstName,
	CASE WHEN ru.LastName IS NULL THEN IsNull(u.LastName,'') ELSE ru.LastName END as LastReplyLastName,
	CASE WHEN ru.DisplayName IS NULL THEN IsNull(IsNull(u.DisplayName,rc.AuthorName),'') ELSE ru.DisplayName END as LastReplyDisplayName,
	CASE WHEN rc.DateCreated IS NULL THEN c.DateCreated ELSE rc.DateCreated END  as LastReplyDate,
	CASE WHEN TT.LastReplyId < ISNULL(f.LastReplyId,0) THEN TT.LastReplyId ELSE 0 END AS LastReplyRead, 
	CASE WHEN FT.MaxReplyRead > TT.LastReplyId OR TT.LastReplyID IS NULL THEN ISNULL(FT.MaxReplyRead,0) ELSE TT.LastReplyId END AS UserLastReplyRead, 
	CASE WHEN FT.MaxTopicRead > TT.TopicId OR TT.TopicId IS NULL THEN ISNULL(FT.MaxTopicRead,0) ELSE TT.TopicId END AS UserLastTopicRead,
	CASE WHEN ftt.LastReplyID <= tt.LastReplyId OR (ISNULL(ftt.LastReplyId,'') = 0 AND c.AuthorId = @UserId) OR (FT.MaxReplyRead >= ftt.LastReplyId) THEN 1 ELSE 0 END AS IsRead,
	ftt.LastReplyId as TopicLastReplyId,
	(SELECT     ISNULL(AVG(Rating), 0) AS Expr1
                            FROM	{databaseOwner}{objectQualifier}activeforums_Topics_Ratings
                            WHERE      (TopicId = T.TopicId)) AS TopicRating, 
						ROW_NUMBER() OVER (ORDER BY 
								CASE
									WHEN rc.DateCreated IS NULL THEN c.DateCreated ELSE rc.DateCreated END DESC
											) as RowRank
				
		FROM	@topics as tmp INNER JOIN
				{databaseOwner}{objectQualifier}activeforums_Topics as t on tmp.TopicId = t.TopicId INNER JOIN			
				{databaseOwner}{objectQualifier}activeforums_ForumTopics AS ftt ON ftt.TopicId = t.TopicId INNER JOIN
				{databaseOwner}{objectQualifier}activeforums_forums as f ON ftt.forumId = f.ForumId INNER JOIN
				{databaseOwner}{objectQualifier}activeforums_Content as c on t.ContentId = c.ContentId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}Users as u on c.AuthorId = u.UserId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}activeforums_Replies as r on ftt.LastReplyId = r.ReplyId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}activeforums_Content as rc on r.ContentId = rc.ContentId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}Users as ru on rc.AuthorId = ru.UserId LEFT OUTER JOIN				
                {databaseOwner}{objectQualifier}activeforums_Topics_Tracking AS TT ON T.TopicId = TT.TopicId AND TT.UserId = @UserId LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}activeforums_Forums_Tracking as FT ON f.ForumId = FT.ForumId AND FT.UserId = @UserId
		WHERE f.PortalId = @PortalId AND f.ModuleId = @ModuleId
	) AS topics 
	INNER JOIN {databaseOwner}{objectQualifier}activeforums_Topics as t ON t.TopicId = topics.TopicId
	INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as f on f.ForumId = topics.ForumId
	INNER JOIN {databaseOwner}{objectQualifier}activeforums_Groups as g on g.ForumGroupId = f.ForumGroupId
	WHERE RowRank > @RowIndex AND RowRank <= (@RowIndex + @MaxRows)



GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_TopicsList]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_TopicsList]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_TopicsList]
@PortalId int,
@PageIndex int,
@PageSize int,
@ForumIds varchar(max),
@CategoryId int=-1,
@TagId int=-1
AS
DECLARE @RecordCount int

IF @CategoryId = -1 AND @TagId = -1
	BEGIN
		SET @RecordCount = (SELECT COUNT(ft.TopicId) 
						FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics as ft
						INNER JOIN {databaseOwner}{objectQualifier}activeforums_Functions_Split(@ForumIds,';') as fids ON fids.id = ft.ForumID);
		WITH Topics AS (
			SELECT f.ForumId, f.PortalId, f.ModuleId, f.ParentForumId, f.ForumName, f.ForumDesc,
			f.Active, f.Hidden, f.TotalTopics, f.TotalReplies, f.PrefixURL,f.PermissionsId,
			ISNULL(g.PrefixURL,'') as GroupPrefixURL,
			ft.LastReplyId, ft.LastTopicDate, ft.LastReplyDate,
			t.TopicId, t.ViewCount, t.ReplyCount, t.IsLocked, t.IsPinned,
			t.TopicIcon, t.StatusId, t.IsAnnounce, t.AnnounceStart, t.Announceend,
			t.TopicType, t.Priority, t.URL, t.TopicData,t.Subject,t.Body,t.Summary,
			t.DateCreated as TopicDateCreated, t.DateCreated as DateCreated, t.DateUpdated as TopicDateUpdated,
			t.TopicAuthorName, t.TopicAuthorId, t.TopicAuthorDisplayName, t.TopicAuthorUsername,
			t.TopicAuthorFirstName, t.TopicAuthorLastName,
			ISNULL(r.ReplyId,-1) as ReplyId, r.ReplySubject, r.ReplySummary, r.ReplyBody,
			r.ReplyAuthorId, r.ReplyAuthorDisplayName, r.ReplyAuthorUserName,
			r.ReplyAuthorFirstName, r.ReplyAuthorLastName,
			r.ReplyIPAddress,r.ReplyDateCreated, r.ReplyDateUpdated,
			CASE WHEN r.ReplyAuthorId IS NULL THEN t.TopicAuthorId ELSE r.ReplyAuthorId END as LastAuthorId,
			ROW_NUMBER() OVER (Order BY t.IsPinned DESC, t.Priority DESC, ft.LastReplyDate DESC) as Row, @RecordCount as RecordCount, p.CanRead, p.CanCreate
		 FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics as ft
		INNER JOIN {databaseOwner}{objectQualifier}activeforums_Functions_Split(@ForumIds,';') as fids ON fids.id = ft.ForumID
		INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as f ON f.ForumId = fids.id
		INNER JOIN {databaseOwner}{objectQualifier}activeforums_Permissions as p ON p.PermissionsId = f.PermissionsId
		INNER JOIN {databaseOwner}{objectQualifier}activeforums_Groups as g on g.ForumGroupId = f.ForumGroupId
		INNER JOIN {databaseOwner}{objectQualifier}vw_activeforums_Topics as t ON t.TopicId = ft.TopicId
		LEFT OUTER JOIN {databaseOwner}{objectQualifier}vw_activeforums_Replies as r ON ft.LastReplyId = r.ReplyID
		) SELECT t.*,p.*,ISNULL(up.Avatar,'') as Avatar,ISNULL(up.AvatarType,0) as AvatarType, u.UserID as LastAuthorId, u.Username as LastAuthorUsername, 
		u.DisplayName as LastAuthorDisplayName, u.FirstName as LastAuthorFirstName,
		u.LastName as LastAuthorLastName,
		CASE WHEN t.ReplyDateCreated IS NULL THEN t.TopicDateCreated ELSE t.ReplyDateCreated END as LastDate
		 from Topics as t INNER JOIN {databaseOwner}{objectQualifier}activeforums_Permissions as p ON p.PermissionsId = t.PermissionsId
		 LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users as u ON u.UserID = t.LastAuthorId
		 LEFT OUTER JOIN {databaseOwner}{objectQualifier}activeforums_UserProfiles as up ON t.LastAuthorId = up.UserId AND up.PortalId = @PortalId
		 WHERE t.Row BETWEEN(@PageIndex-1) * @PageSize +1 AND @PageIndex*@PageSize;
END
IF @CategoryId > 0 OR @TagId > 0
BEGIN
	DECLARE @IsCategory bit
	SET @IsCategory = 0;
	BEGIN
	If @CategoryId > 0 
		BEGIN
		SET @TagId = @CategoryId;
		SET @IsCategory = 1;
		END
	END;
SET @RecordCount = (SELECT COUNT(ft.TopicId) 
						FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics as ft
						INNER JOIN {databaseOwner}{objectQualifier}activeforums_Functions_Split(@ForumIds,';') as fids ON fids.id = ft.ForumID
						INNER JOIN {databaseOwner}{objectQualifier}activeforums_Topics_Tags as ttg ON ttg.TopicId = ft.TopicId AND ttg.TagId = @TagId
						INNER JOIN {databaseOwner}{objectQualifier}activeforums_Tags as tg ON tg.TagId = ttg.TagId AND tg.IsCategory = @IsCategory);
WITH Topics AS (
	SELECT f.ForumId, f.PortalId, f.ModuleId, f.ParentForumId, f.ForumName, f.ForumDesc,
			f.Active, f.Hidden, f.TotalTopics, f.TotalReplies, f.PrefixURL,f.PermissionsId,
			ISNULL(g.PrefixURL,'') as GroupPrefixURL,
			ft.LastReplyId, ft.LastTopicDate, ft.LastReplyDate,
			t.TopicId, t.ViewCount, t.ReplyCount, t.IsLocked, t.IsPinned,
			t.TopicIcon, t.StatusId, t.IsAnnounce, t.AnnounceStart, t.Announceend,
			t.TopicType, t.Priority, t.URL, t.TopicData,t.Subject,t.Body,t.Summary,
			t.DateCreated as TopicDateCreated, t.DateUpdated as TopicDateUpdated,
			t.TopicAuthorName, t.TopicAuthorId, t.TopicAuthorDisplayName, t.TopicAuthorUsername,
			t.TopicAuthorFirstName, t.TopicAuthorLastName,
			ISNULL(r.ReplyId,-1) as ReplyId, r.ReplySubject, r.ReplySummary, r.ReplyBody,
			r.ReplyAuthorId, r.ReplyAuthorDisplayName, r.ReplyAuthorUserName,
			r.ReplyAuthorFirstName, r.ReplyAuthorLastName,
			r.ReplyIPAddress,r.ReplyDateCreated, r.ReplyDateUpdated,
			CASE WHEN r.ReplyAuthorId IS NULL THEN t.TopicAuthorId ELSE r.ReplyAuthorId END as LastAuthorId,
			ROW_NUMBER() OVER (Order BY t.IsPinned DESC, t.Priority DESC,  ft.LastReplyDate DESC) as Row, @RecordCount as RecordCount, p.CanRead, p.CanCreate
 FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics as ft
 INNER JOIN {databaseOwner}{objectQualifier}activeforums_Topics_Tags as ttg ON ttg.TopicId = ft.TopicId AND ttg.TagId = @TagId
 INNER JOIN {databaseOwner}{objectQualifier}activeforums_Tags as tg ON tg.TagId = ttg.TagId AND tg.IsCategory = @IsCategory
INNER JOIN {databaseOwner}{objectQualifier}activeforums_Functions_Split(@ForumIds,';') as fids ON fids.id = ft.ForumID
INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as f ON f.ForumId = fids.id
INNER JOIN {databaseOwner}{objectQualifier}activeforums_Permissions as p ON p.PermissionsId = f.PermissionsId
INNER JOIN {databaseOwner}{objectQualifier}activeforums_Groups as g on g.ForumGroupId = f.ForumGroupId
INNER JOIN {databaseOwner}{objectQualifier}vw_activeforums_Topics as t ON t.TopicId = ft.TopicId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}vw_activeforums_Replies as r ON ft.LastReplyId = r.ReplyID

) SELECT t.*,p.*,u.UserID as LastAuthorId, u.Username as LastAuthorUsername, 
u.DisplayName as LastAuthorDisplayName, u.FirstName as LastAuthorFirstName,
u.LastName as LastAuthorLastName,
CASE WHEN t.ReplyDateCreated IS NULL THEN t.TopicDateCreated ELSE t.ReplyDateCreated END as LastDate
 from Topics as t INNER JOIN {databaseOwner}{objectQualifier}activeforums_Permissions as p ON p.PermissionsId = t.PermissionsId
 INNER JOIN {databaseOwner}{objectQualifier}Users as u ON u.UserID = t.LastAuthorId
 INNER JOIN {databaseOwner}{objectQualifier}activeforums_UserProfiles as up ON up.UserId = t.LastAuthorId AND up.PortalId = @PortalId
 WHERE t.Row BETWEEN(@PageIndex-1) * @PageSize +1 AND @PageIndex*@PageSize
END


GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}vw_activeforums_Replies]'))
DROP VIEW {databaseOwner}[{objectQualifier}vw_activeforums_Replies]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW {databaseOwner}[{objectQualifier}vw_activeforums_Replies]
AS
SELECT     r.ReplyId, r.TopicId, r.ReplyToId, r.ContentId, c.Subject as ReplySubject, c.Summary as ReplySummary,
			c.Body as ReplyBody, c.AuthorId as ReplyAuthorId, c.AuthorName as ReplyAuthorName,
			ISNULL(u.DisplayName,c.AuthorName) as ReplyAuthorDisplayName, ISNULL(u.Username,c.AuthorName) as ReplyAuthorUsername,
			ISNULL(u.FirstName,c.AuthorName) as ReplyAuthorFirstName,
			ISNULL(u.LastName,c.AuthorName) as ReplyAuthorLastName, c.DateCreated as ReplyDateCreated, c.DateUpdated as ReplyDateUpdated, c.IPAddress as ReplyIPAddress
FROM         {databaseOwner}{objectQualifier}activeforums_Replies AS r INNER JOIN
			 {databaseOwner}{objectQualifier}activeforums_Content AS c ON r.ContentId = c.ContentId LEFT OUTER JOIN
			 {databaseOwner}{objectQualifier}Users as u ON u.UserID = c.AuthorId
WHERE     (r.IsDeleted = 0) AND (r.IsApproved = 1)


GO




IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}vw_activeforums_ForumReplies]'))
DROP VIEW {databaseOwner}[{objectQualifier}vw_activeforums_ForumReplies]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW {databaseOwner}[{objectQualifier}vw_activeforums_ForumReplies]
AS
SELECT     F.ForumId, R.TopicId, RC.Subject, RC.Summary, RC.AuthorId, RC.AuthorName, R.ReplyId, ISNULL(U.Username,RC.AuthorName) as Username,
					IsNULL(U.FirstName,RC.AuthorName) as FirstName, IsNull(U.LastName,'') as LastName, IsNull(U.DisplayName,RC.AuthorName) as DisplayName, RC.Body, 
					RC.ContentId, RC.DateCreated, T.Subject AS TopicSubject, RC.DateUpdated, RC.IPAddress, FF.PortalId, FF.ModuleId, FF.ForumName, T.TopicIcon, R.StatusId, 
					T.IsLocked, T.IsPinned, T.ViewCount, T.ReplyCount, T.TopicType, R.IsApproved, FF.ForumGroupId, FF.SortOrder, R.IsRejected,T.URL, r.ReplyToId
FROM         {databaseOwner}{objectQualifier}activeforums_Content AS RC INNER JOIN
					  {databaseOwner}{objectQualifier}activeforums_Replies AS R ON RC.ContentId = R.ContentId INNER JOIN
					  {databaseOwner}{objectQualifier}activeforums_ForumTopics AS F ON R.TopicId = F.TopicId INNER JOIN
					  {databaseOwner}{objectQualifier}vw_activeforums_ForumTopics AS T ON F.TopicId = T.TopicId INNER JOIN
					  {databaseOwner}{objectQualifier}activeforums_Forums AS FF ON F.ForumId = FF.ForumId LEFT OUTER JOIN
					  {databaseOwner}{objectQualifier}Users AS U ON RC.AuthorId = U.UserID
WHERE     (RC.IsDeleted = 0) AND (R.IsDeleted = 0) AND (FF.Active = 1)



GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}vw_activeforums_TopicView]'))
DROP VIEW {databaseOwner}[{objectQualifier}vw_activeforums_TopicView]
GO

CREATE VIEW {databaseOwner}[{objectQualifier}vw_activeforums_TopicView]
AS
SELECT     PortalId, ModuleId, ForumId, ForumName, TopicId, ReplyId, Subject, Summary, AuthorId, AuthorName, Username, FirstName, LastName, DisplayName, DateCreated, 
					  DateUpdated, ContentId, TopicIcon, StatusId, TopicType, IsPinned, IsLocked, ViewCount, ReplyCount, URL, r.ReplyToId
FROM         {databaseOwner}{objectQualifier}vw_activeforums_ForumReplies AS R
WHERE     (IsApproved = 1)
UNION
SELECT     PortalId, ModuleId, ForumId, ForumName, TopicId, 0 AS ReplyId, Subject, Summary, AuthorId, AuthorName, Username, FirstName, LastName, DisplayName, 
					  DateCreated, DateUpdated, ContentId, TopicIcon, StatusId, TopicType, IsPinned, IsLocked, ViewCount, ReplyCount, URL, 0 as ReplyToId
FROM         {databaseOwner}{objectQualifier}vw_activeforums_ForumTopics AS T
WHERE     (IsApproved = 1)
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_TopicView]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_TopicView]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_TopicView]
@PortalId int,
@ModuleId int,
@ForumId int,
@TopicId int,
@UserId int,
@RowIndex int, 
@MaxRows int,
@IsSuperUser bit = 0,
@Sort varchar(10) = 'ASC'
AS
--Forum/Group/Topic Info
DECLARE @LastPostId int
DECLARE @ReplyCount int
SET @ReplyCount = (Select Count(ReplyId) from {databaseOwner}{objectQualifier}activeforums_Replies WHERE TopicId = @TopicId AND IsDeleted = 0 AND IsApproved = 1)
DECLARE @Tags nvarchar(1000)
SET @Tags= RTRIM(IsNull({databaseOwner}{objectQualifier}activeforums_Topics_GetTags(@TopicId),''))
BEGIN
SELECT     
	v.ForumGroupId, 
	v.ModuleId, 
	v.GroupName, 
	v.GroupActive, 
	v.GroupHidden, 
	v.ForumId, 
	v.ParentForumId, 
	v.ForumName, 
	v.ForumDesc, 
	v.ForumActive, 
	v.ForumHidden, 
	v.TotalTopics, 
	ISNULL(v.TotalReplies, 0) AS TotalReplies,
	v.LastPostId,
	v.GroupSettingsKey,
	v.ForumSettingsKey,
	TopicTemplateId = IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE SettingName = 'TOPICTEMPLATEID' and GroupKey = v.ForumSettingsKey),0),
	
						  IsNull((SELECT     SettingValue
							FROM          {databaseOwner}{objectQualifier}activeforums_Settings AS activeforums_Settings_1
							WHERE      (SettingName = 'ALLOWRSS') AND (GroupKey = v.ForumSettingsKey)),0) AS AllowRSS,
						  IsNull((SELECT     SettingValue
							FROM          {databaseOwner}{objectQualifier}activeforums_Settings AS activeforums_Settings_3
							WHERE      (SettingName = 'ALLOWHTML') AND (GroupKey = v.ForumSettingsKey)),0) AS AllowHTML,
						  IsNull((SELECT     SettingValue
							FROM          {databaseOwner}{objectQualifier}activeforums_Settings AS activeforums_Settings_2
							WHERE      (SettingName = 'ALLOWSCRIPT') AND (GroupKey = v.ForumSettingsKey)),0) AS AllowScript,
							IsNull((SELECT     SettingValue
							FROM          {databaseOwner}{objectQualifier}activeforums_Settings
							WHERE      (SettingName = 'ALLOWTAGS') AND (GroupKey = v.ForumSettingsKey)),0) AS AllowTags,
							 FT.TopicId,
						  (SELECT     ISNULL(AVG(Rating), 0) AS Expr1
							FROM          {databaseOwner}{objectQualifier}activeforums_Topics_Ratings
							WHERE      (TopicId = @TopicId)) AS TopicRating,
ISNULL
						  ((SELECT     Id
							  FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions
							  WHERE     (ForumId = @ForumId) AND (TopicId = @TopicId) AND (UserId = @UserId)), 0) AS IsSubscribedTopic, ISNULL
						  ((SELECT     Id
							  FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions AS activeforums_Subscriptions_1
							  WHERE     (ForumId = @ForumId) AND (TopicId = 0) AND (UserId = @UserId)), 0) AS IsSubscribedForum,
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.DateCreated,'') ELSE IsNull(R.DateCreated,'') END AS LastPostDate, 
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.AuthorId,'') ELSE IsNull(R.AuthorId,'') END AS LastPostAuthorId, 
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.AuthorName,'') ELSE IsNull(R.AuthorName,'') END AS LastPostAuthorName,
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.UserName,'') ELSE IsNull(R.Username,'') END AS LastPostUserName,
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.FirstName,'') ELSE IsNull(R.FirstName,'') END AS LastPostFirstName, 
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.LastName,'') ELSE IsNull(R.LastName,'') END AS LastPostLastName, 
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.DisplayName,'') ELSE IsNull(R.DisplayName,'') END AS LastPostDisplayName, T.Subject, T.Summary, T.Body, T.AuthorId, T.AuthorName, T.Username, T.FirstName, T.LastName, 
					  T.DisplayName, T.DateCreated, T.DateUpdated, T.ViewCount, @ReplyCount as ReplyCount, T.IsPinned, T.IsLocked, T.StatusId, T.TopicIcon, T.TopicType, @Tags as Tags,ISNULL(t.TopicData,'') as TopicData,
					  {databaseOwner}{objectQualifier}activeforums_Poll.PollID,
					{databaseOwner}{objectQualifier}activeforums_Topic_GetPrevNext(@ForumId, @TopicId, 1) AS NextTopic, 
					{databaseOwner}{objectQualifier}activeforums_Topic_GetPrevNext(@ForumId, @TopicId, -1) AS PrevTopic,
					t.URL,
					T.AuthorName as TopicAuthor
FROM         {databaseOwner}{objectQualifier}activeforums_ForumTopics AS FT INNER JOIN
					  {databaseOwner}{objectQualifier}vw_activeforums_GroupForum AS v ON FT.ForumId = v.ForumId INNER JOIN
					  {databaseOwner}{objectQualifier}vw_activeforums_ForumTopics AS T ON FT.TopicId = T.TopicId LEFT OUTER JOIN
					  {databaseOwner}{objectQualifier}vw_activeforums_ForumReplies AS R ON FT.LastReplyId = R.ReplyId AND FT.LastReplyId IS NOT NULL LEFT OUTER JOIN
					  {databaseOwner}{objectQualifier}activeforums_Poll ON T.TopicId = {databaseOwner}{objectQualifier}activeforums_Poll.TopicId
WHERE     (v.ForumActive = 1) AND (v.ModuleId = @ModuleId) AND (v.ForumId = @ForumId) AND (FT.TopicId = @TopicId)
END
--Forum Security
BEGIN
	Select p.* from {databaseOwner}{objectQualifier}activeforums_Permissions as p INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as f ON f.PermissionsId = p.PermissionsId WHERE f.ForumId = @ForumId
	
END
--Get Topic and Replies
	SELECT	ForumId, TopicId, ReplyId, [Subject], Summary, AuthorId, StatusId, AuthorName, UserName, FirstName, LastName,
			DisplayName, DateCreated, DateUpdated, Body, TopicCount, ReplyCount, ViewCount, AnswerCount,
			RewardPoints, UserDateCreated, DateLastActivity, UserCaption, [Signature], SignatureDisabled,
			UserPostCount, UserTotalPoints,IPAddress,Avatar,AvatarType,AvatarDisabled,Yahoo,MSN,ICQ,AOL,Occupation,Location,Interests,WebSite,MemberSince,
			ContentId,IsUserOnline,ReplyToId,	UserRoles = {databaseOwner}{objectQualifier}activeforums_UserProfiles_GetUserRoles(AuthorId, @PortalID, GetDate(),0),
			@Tags as Tags
			
	FROM
			(
			SELECT	T.ForumId, T.TopicId, T.ReplyId, T.Subject, T.Summary, T.AuthorId, T.StatusId, IsNull(T.AuthorName,'anon') as AuthorName, IsNull(T.Username,IsNull(T.AuthorName,'anon')) as Username,
			IsNull(T.FirstName,'') as FirstName, IsNull(T.LastName,'') as LastName,IsNull(T.DisplayName,T.AuthorName) as DisplayName,
			T.DateCreated, T.DateUpdated, C.Body, IsNull(P.TopicCount,0) as TopicCount, IsNull(P.ReplyCount,0) as ReplyCount,
			IsNull(P.ViewCount,0) as ViewCount, IsNull(P.AnswerCount,0) as AnswerCount, IsNull(P.RewardPoints,0) as RewardPoints,
			IsNull(P.DateCreated,'') AS UserDateCreated, IsNull(P.DateLastActivity,'') as DateLastActivity, 
			IsNull(P.UserCaption,'') as UserCaption, IsNull(P.Signature,'') as [Signature], IsNull(P.SignatureDisabled,0) as SignatureDisabled, 
			UserPostCount = (IsNull(P.TopicCount,0) + IsNull(P.ReplyCount,0)), 
			UserTotalPoints = (IsNull(P.TopicCount,0) + IsNull(P.ReplyCount,0) + IsNull(P.AnswerCount,0) + IsNull(P.RewardPoints,0)),
			C.IPAddress, IsNull(P.Avatar,'') as Avatar, IsNull(P.AvatarType,0) as AvatarType, IsNull(P.AvatarDisabled,0) as AvatarDisabled,
			IsNull(P.Yahoo,'') as Yahoo, IsNull(P.MSN,'') as MSN, IsNull(P.ICQ,'') as ICQ, IsNull(P.AOL,'') as AOL, IsNull(P.Occupation,'') as Occupation, 
			IsNull(P.Location,'') as Location, IsNull(P.Interests,'') as Interests, IsNull(P.WebSite,'') as WebSite, IsNull(P.DateCreated,'') as MemberSince,
			C.ContentId, IsUserOnline = (CASE WHEN DATEDIFF(mi,p.DateLastActivity,GetDate()) <=1 THEN 1 ELSE 0 END),T.ReplyToId,
			ROW_NUMBER() OVER (Order By 
								CASE
									WHEN @Sort = 'DESC' THEN T.DateCreated END DESC,
								CASE 
									WHEN @Sort = 'ASC' THEN T.DateCreated END ASC
								) as RowRank
			FROM	{databaseOwner}{objectQualifier}vw_activeforums_TopicView AS T INNER JOIN
					{databaseOwner}{objectQualifier}activeforums_Content AS C ON T.ContentId = C.ContentId LEFT OUTER JOIN
					{databaseOwner}{objectQualifier}activeforums_UserProfiles AS P ON C.AuthorId = P.UserId AND P.PortalId = @PortalId AND P.ModuleId = -1
			WHERE     (T.TopicId = @TopicId)
			)
		AS TopicWithRowNumbers
		WHERE RowRank > @RowIndex AND RowRank <= (@RowIndex + @MaxRows)

--Get Attachments
SELECT     A.AttachID, c.ContentId, A.PostID, A.UserID, A.Filename, A.DateAdded, A.DateUpdated, A.FileData, A.ContentType, A.FileSize, A.AllowDownload
FROM         {databaseOwner}{objectQualifier}activeforums_Attachments AS A INNER JOIN
			{databaseOwner}{objectQualifier}activeforums_Content_Attachments as c on a.attachid = c.attachid inner join
					  {databaseOwner}{objectQualifier}vw_activeforums_TopicView AS T ON c.ContentId = T.ContentId
WHERE     (T.TopicId = @TopicId AND A.AllowDownload = 1)
--Update View Count
UPDATE {databaseOwner}{objectQualifier}activeforums_Topics SET ViewCount = (ViewCount+1) WHERE TopicId = @TopicId
If @UserId > 0
BEGIN
SELECT @LastPostId = IsNull(LastReplyId,0) FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics WHERE ForumId = @ForumId AND TopicId = @TopicId
exec {databaseOwner}{objectQualifier}activeforums_Forums_Tracking_UpdateUser @ModuleId, @UserId, @ForumId	
SET @LastPostId = IsNull(@LastPostId,0)
exec {databaseOwner}{objectQualifier}activeforums_Topics_Tracking_UpdateUser @ForumId, @TopicId, @LastPostId, @UserId
exec {databaseOwner}{objectQualifier}activeforums_UserProfiles_UpdateActivity @PortalId, @ModuleId, @UserId
END



GO






