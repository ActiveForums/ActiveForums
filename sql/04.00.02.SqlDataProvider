ALTER TABLE {databaseOwner}{objectQualifier}activeforums_Forums ADD
	LastTopicId int NOT NULL CONSTRAINT DF_{objectQualifier}activeforums_Forums_LastTopicId DEFAULT 0,
	LastReplyId int NOT NULL CONSTRAINT DF_{objectQualifier}activeforums_Forums_LastReplyId DEFAULT 0
GO
DECLARE forums_curs CURSOR FOR 
SELECT ForumID FROM {databaseOwner}{objectQualifier}activeforums_Forums
DECLARE @ForumId int
OPEN forums_curs
FETCH NEXT FROM forums_curs INTO @ForumID
WHILE (@@fetch_status = 0)
BEGIN
		DECLARE @ReplyId int
		DECLARE @TopicId int
		SET @ReplyId = (SELECT MAX(r.ReplyId) FROM {databaseOwner}{objectQualifier}activeforums_Replies as r inner join {databaseOwner}{objectQualifier}activeforums_topics as t on r.topicid = t.topicid inner join {databaseOwner}{objectQualifier}activeforums_ForumTopics as ft on t.topicid = ft.topicid  WHERE r.IsApproved = 1 AND r.IsDeleted = 0 AND ft.forumid = @ForumId )
		SET @TopicId = (SELECT MAX(t.TopicId) FROM {databaseOwner}{objectQualifier}activeforums_Topics as t inner join {databaseOwner}{objectQualifier}activeforums_ForumTopics as ft on t.topicid = ft.topicid  WHERE t.IsApproved = 1 AND t.IsDeleted = 0 AND ft.forumid = @ForumId )
		UPDATE {databaseOwner}{objectQualifier}activeforums_Forums SET LastReplyId = IsNull(@ReplyId,0), LastTopicId = ISNULL(@TopicId,0) WHERE ForumId = @ForumId
FETCH NEXT FROM forums_curs INTO @ForumId
END
CLOSE forums_curs
DEALLOCATE forums_curs
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Topic_GetPrevNext]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION {databaseOwner}[{objectQualifier}activeforums_Topic_GetPrevNext]
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_GetForumSecurity]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION {databaseOwner}[{objectQualifier}activeforums_GetForumSecurity]
GO


CREATE FUNCTION {databaseOwner}{objectQualifier}activeforums_Topic_GetPrevNext
(
@ForumId int,
@TopicId int,
@Direction int
)
RETURNS int
AS
BEGIN
DECLARE @SelectedTopicRowRank int
DECLARE @ReturnTopicId int
SELECT @SelectedTopicRowRank = RowRank
	FROM (
		SELECT    T.TopicId,
		ROW_NUMBER() OVER (ORDER BY c.DateCreated DESC, rc.DateCreated DESC) as RowRank
		FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics as ft INNER JOIN 
			{databaseOwner}{objectQualifier}activeforums_Topics as T ON ft.TopicId = t.TopicId INNER JOIN
			{databaseOwner}{objectQualifier}activeforums_Content as C on t.ContentId = c.ContentId LEFT OUTER JOIN
			{databaseOwner}{objectQualifier}activeforums_Replies as r on ft.LastReplyId = r.ReplyId LEFT OUTER JOIN
			{databaseOwner}{objectQualifier}activeforums_Content as rc on r.ContentId = rc.ContentId 
		WHERE     (ft.ForumId = @ForumId)	

		) AS TopicsWithRowNumbers
	WHERE TopicId = @TopicId

SELECT @ReturnTopicId = TopicId
	FROM (
		SELECT    T.TopicId,
		ROW_NUMBER() OVER (ORDER BY c.DateCreated DESC, rc.DateCreated DESC) as RowRank
		FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics as ft INNER JOIN 
			{databaseOwner}{objectQualifier}activeforums_Topics as T ON ft.TopicId = t.TopicId INNER JOIN
			{databaseOwner}{objectQualifier}activeforums_Content as C on t.ContentId = c.ContentId LEFT OUTER JOIN
			{databaseOwner}{objectQualifier}activeforums_Replies as r on ft.LastReplyId = r.ReplyId LEFT OUTER JOIN
			{databaseOwner}{objectQualifier}activeforums_Content as rc on r.ContentId = rc.ContentId 
		WHERE     (ft.ForumId = @ForumId)	

		) AS TopicsWithRowNumbers
	WHERE RowRank = @SelectedTopicRowRank + @Direction


RETURN IsNull(@ReturnTopicId, 0)
END
GO
CREATE FUNCTION {databaseOwner}{objectQualifier}activeforums_GetForumSecurity
(
	@PortalId int,
	@UserId int,
	@IsSuperUser bit
)
RETURNS @Security TABLE 
(
	ForumId int UNIQUE,
	[View] bit,
	[Read] bit,
	[Create] bit,
	[Reply] bit,
	[Edit] bit,
	[Delete] bit,
	[Lock] bit,
	[Pin] bit,
	[Attach] bit,
	[Poll] bit,
	[Block] bit,
	[Trust] bit,
	[Subscribe] bit,
	[Announce] bit,
	[ModApprove] bit,
	[ModMove] bit,
	[ModSplit] bit,
	[ModDelete] bit,
	[ModUser] bit,
	[ModEdit] bit,
	[ModLock] bit,
	[ModPin] bit,
	[UserTrustLevel] int
)
AS
BEGIN
	INSERT INTO 
		@Security
			(ForumId, 
			[View],
			[Read],
			[Create],
			[Reply],
			[Edit],
			[Delete],
			[Lock],
			[Pin],
			[Attach],
			[Poll],
			[Block],
			[Trust],
			[Subscribe],
			[Announce],
			[ModApprove],
			[ModMove],
			[ModSplit],
			[ModDelete],
			[ModUser],
			[ModEdit],
			[ModLock],
			[ModPin],
			[UserTrustLevel])

		(
			SELECT  
			F.ForumId,
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[View])),0) END as [View],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[Read])),0) END as [Read],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[Create])),0) END as [Create],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[Reply])),0) END as [Reply],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[Edit])),0) END as [Edit],			
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[Delete])),0) END as [Delete],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[Lock])),0) END as [Lock],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[Pin])),0) END as [Pin],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[Attach])),0) END as [Attach],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[Poll])),0) END as [Poll],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[Block])),0) END as [Block],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[Trust])),0) END as [Trust],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[Subscribe])),0) END as [Subscribe],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[Announce])),0) END as [Announce],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[ModApprove])),0) END as [ModApprove],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[ModMove])),0) END as [ModMove],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[ModSplit])),0) END as [ModSplit],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[ModDelete])),0) END as [ModDelete],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[ModUser])),0) END as [ModUser],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[ModEdit])),0) END as [ModEdit],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[ModLock])),0) END as [ModLock],
			CASE WHEN @IsSuperUser = 1 THEN '1' ELSE IsNULL(MAX(Convert(int,[ModPin])),0) END as [ModPin],
			[UserTrustLevel] = IsNull((SELECT TrustLevel from {databaseOwner}{objectQualifier}activeforums_UserProfiles WHERE PortalId = @PortalId AND UserId = @UserId),0)
			FROM         {databaseOwner}{objectQualifier}activeforums_Security AS S WITH (NOLOCK) INNER JOIN
				{databaseOwner}{objectQualifier}activeforums_Forums as F on S.SecurityKey = F.ForumSecurityKey  LEFT OUTER JOIN
				{databaseOwner}{objectQualifier}UserRoles AS UR WITH (NOLOCK) ON S.ObjectId = UR.RoleID AND S.ObjectType = 0
			WHERE
				(@IsSuperUser = 0 AND (
					(
						(UR.EffectiveDate IS NULL AND UR.ExpiryDate >= GETDATE()) 
						OR
						(UR.EffectiveDate IS NULL AND UR.ExpiryDate IS NULL)
						OR
						(UR.EffectiveDate <= GETDATE() AND UR.ExpiryDate IS NULL)
						OR
						(UR.EffectiveDate <= GETDATE() AND UR.ExpiryDate >= GETDATE())
					)
					AND
					(UR.UserId = @UserId AND S.ObjectType = 0 AND @UserId > 0)
				)
				OR
				(S.ObjectId = @UserId AND @UserId > 0 AND S.ObjectType = 1)
				OR 
				(S.ObjectId = -1 AND S.ObjectType = 0) 
				OR
				(S.ObjectId = -3 AND S.ObjectType = 0 AND @UserId = -1)
				) OR @IsSuperUser = 1
				GROUP BY F.ForumId)
			

	RETURN 
END
GO



