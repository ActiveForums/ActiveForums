IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_ActiveView]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_ActiveView]
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}activeforums_UI_ActiveView
	@PortalId int,
	@ModuleId int,
	@UserId int,
	@RowIndex int = 0,
	@MaxRows int = 20,
	@Sort nvarchar(10) = 'DESC',
	@IsSuperUser bit = 0,
	@TimeFrame int
AS
DECLARE @RecordCount int
SET @RecordCount = (Select Count(*) from {databaseOwner}{objectQualifier}vw_activeforums_TopicsView as T INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as F on T.ForumId = F.ForumId LEFT OUTER JOIN (
				SELECT DISTINCT S.SecurityKey, MAX(Convert(int,S.[View]))as [View]
						FROM  {databaseOwner}{objectQualifier}activeforums_Security AS S LEFT OUTER JOIN
						{databaseOwner}{objectQualifier}UserRoles AS R ON S.ObjectId = R.RoleID
					WHERE ((S.[View] = 1 AND S.ObjectType = 0 AND S.SecureType = 1) 
						AND  
					(R.EffectiveDate IS NULL) AND (R.ExpiryDate >= GETDATE()) OR
                      (R.EffectiveDate IS NULL) AND (R.ExpiryDate IS NULL) OR
                      (R.EffectiveDate <= GETDATE()) AND (R.ExpiryDate IS NULL) OR
                      (R.EffectiveDate <= GETDATE()) AND (R.ExpiryDate >= GETDATE()))
				
				AND (R.UserId = @UserId OR ((@UserId = -1 AND S.ObjectId = -3) OR (@UserId = -1 AND S.ObjectId = -1)))
				Group By s.SecurityKey
			   ) sec on sec.SecurityKey = F.ForumSecurityKey
WHERE (sec.[View] = 1 OR @IsSuperUser = 1) AND T.PortalId = @PortalId AND T.ModuleId = @ModuleId AND DATEDIFF(mi,t.LastReplyDate,GetDate())<= @TimeFrame)

SELECT ForumId, ForumName, LastReplyId, TopicId, ViewCount, ReplyCount, IsLocked, IsPinned, TopicIcon, StatusId, IsAnnounce, AnnounceStart, AnnounceEnd,
		TopicType, [Subject], Summary, AuthorId, AuthorName, Body, DateCreated, LastReplySubject, LastReplySummary, LastReplyAuthorId,
		LastReplyAuthorName, LastReplyUserName, LastReplyFirstName, LastReplyLastName, LastReplyDisplayName, LastReplyDate, AuthorUserName,
		AuthorFirstName, AuthorLastName, AuthorDisplayName, LastReplyRead, IsRead, TopicRating, @RecordCount as RecordCount
	FROM
	(SELECT     T.ForumId, T.ForumName, T.LastReplyId, T.TopicId, T.ViewCount, T.ReplyCount, T.IsLocked, T.IsPinned, IsNull(T.TopicIcon,'') as TopicIcon, T.StatusId, T.IsAnnounce, T.AnnounceStart, T.AnnounceEnd, 
                      T.TopicType, T.Subject, T.Summary, T.AuthorId, T.AuthorName, T.Body, T.DateCreated, T.LastReplySubject, T.LastReplySummary, T.LastReplyAuthorId, 
                      T.LastReplyAuthorName, T.LastReplyUsername, T.LastReplyFirstName, T.LastReplyLastName, T.LastReplyDisplayName, T.LastReplyDate, T.AuthorUsername, 
                      T.AuthorFirstName, T.AuthorLastName, T.AuthorDisplayName,
                      (CASE WHEN TT.LastReplyId < T.LastReplyId THEN TT.LastReplyId ELSE 0 END) AS LastReplyRead,
						(CASE WHEN (IsNull(TT.TopicId,0) = 0 AND ISNULL(FT.MaxTopicRead,0) < T.TopicId) OR 
						(ISNULL(FT.MaxTopicRead,0) < T.TopicID AND (ISNULL(FT.MaxReplyRead,0) = 0 OR ISNULL(FT.MaxReplyRead,0) < T.LastReplyId)) OR
						(ISNULL(FT.MaxTopicRead,0) < IsNull(T.TopicId,0) AND ISNULL(FT.MaxReplyRead,0) < ISNULL(T.LastReplyId,0) AND IsNull(TT.TopicId,0) > 0 AND IsNull(TT.LastReplyId,0) < T.LastReplyId) THEN 0 ELSE 1 END) as IsRead,
                          (SELECT     ISNULL(AVG(Rating), 0) AS Expr1
                            FROM	{databaseOwner}{objectQualifier}activeforums_Topics_Ratings
                            WHERE      (TopicId = T.TopicId)) AS TopicRating, 
						ROW_NUMBER() OVER (
							ORDER BY 
								CASE
									WHEN @Sort = 'DESC' THEN T.LastReplyDate END DESC,
								CASE 
									WHEN @Sort = 'ASC' THEN T.LastReplyDate END ASC
								
							) as RowRank
		FROM	{databaseOwner}{objectQualifier}vw_activeforums_TopicsView as T INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as F on T.ForumId = F.ForumId LEFT OUTER JOIN 
			(SELECT DISTINCT S.SecurityKey, MAX(Convert(int,S.[View]))as [View]
						FROM  {databaseOwner}{objectQualifier}activeforums_Security AS S LEFT OUTER JOIN
						{databaseOwner}{objectQualifier}UserRoles AS R ON S.ObjectId = R.RoleID
					WHERE ((S.[View] = 1 AND S.ObjectType = 0 AND S.SecureType = 1) 
						AND  
					(R.EffectiveDate IS NULL) AND (R.ExpiryDate >= GETDATE()) OR
                      (R.EffectiveDate IS NULL) AND (R.ExpiryDate IS NULL) OR
                      (R.EffectiveDate <= GETDATE()) AND (R.ExpiryDate IS NULL) OR
                      (R.EffectiveDate <= GETDATE()) AND (R.ExpiryDate >= GETDATE()))
				
				AND (R.UserId = @UserId OR ((@UserId = -1 AND S.ObjectId = -3) OR (@UserId = -1 AND S.ObjectId = -1)))
				Group By s.SecurityKey
			   ) sec on sec.SecurityKey = f.ForumSecurityKey LEFT OUTER JOIN
                {databaseOwner}{objectQualifier}activeforums_Topics_Tracking AS TT ON T.TopicId = TT.TopicId AND TT.UserId = @UserId LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}activeforums_Forums_Tracking AS FT ON T.ForumId = FT.ForumId AND FT.UserId = @UserId 
		WHERE T.PortalId = @PortalId AND T.ModuleId = @ModuleId AND  DATEDIFF(mi,t.LastReplyDate,GetDate())<= @TimeFrame AND (sec.[View] = 1 or @IsSuperUser = 1)
	) AS TopicsWithRowNumbers
	WHERE RowRank > @RowIndex AND RowRank <= (@RowIndex + @MaxRows)
GO
