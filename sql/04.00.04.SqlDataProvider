
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Subscriptions_Subscribers]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Subscriptions_Subscribers]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Topics_Save]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_Save]
GO
CREATE PROCEDURE  {databaseOwner}{objectQualifier}activeforums_Subscriptions_Subscribers(@PortalId int, @ForumId int, @TopicId int, @SubType int)
AS
DECLARE @subs TABLE (userid int, username nvarchar(255), firstname nvarchar(255), lastname nvarchar(255), email nvarchar(255), displayname nvarchar(255))

INSERT INTO @subs 
	(userid, username, firstname, lastname, email, displayname)
	(SELECT  U.UserID, U.Username, U.FirstName, U.LastName, U.Email, U.DisplayName
FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions AS S INNER JOIN
			{databaseOwner}{objectQualifier}activeforums_Forums as F on s.ForumId = f.ForumId INNER JOIN
                     {databaseOwner}{objectQualifier}Users AS U ON S.UserId = U.UserID INNER JOIN
                      {databaseOwner}{objectQualifier}UserPortals AS P ON U.UserID = P.UserId INNER JOIN
                      {databaseOwner}{objectQualifier}UserRoles AS ur ON U.UserID = ur.UserID RIGHT OUTER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Security AS sec ON ur.RoleID = sec.ObjectId AND f.ForumSecurityKey = sec.SecurityKey 
WHERE     (P.Authorised = 1 AND sec.Subscribe = 1 AND s.Mode = @SubType) 
	AND ((S.ForumId = @ForumId AND S.TopicId = 0) OR (S.TopicId = @TopicId))
	AND (
			(
				(UR.EffectiveDate IS NULL AND UR.ExpiryDate >= GETDATE()) 
			 OR (UR.EffectiveDate IS NULL AND UR.ExpiryDate IS NULL)
			 OR (UR.EffectiveDate <= GETDATE() AND UR.ExpiryDate IS NULL)
			 OR (UR.EffectiveDate <= GETDATE() AND UR.ExpiryDate >= GETDATE())
			)
	
		)
)
INSERT INTO @subs 
	(userid, username, firstname, lastname, email, displayname)
	(SELECT  U.UserID, U.Username, U.FirstName, U.LastName, U.Email, U.DisplayName
FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions AS S INNER JOIN
                     {databaseOwner}{objectQualifier}Users AS U ON S.UserId = U.UserID  
WHERE s.Mode = @SubType AND u.IsSuperUser = 1
	AND ((S.ForumId = @ForumId AND S.TopicId = 0) OR (S.TopicId = @TopicId))
	
)

INSERT INTO @subs 
	(userid, username, firstname, lastname, email, displayname)
	(SELECT     U.UserID, U.Username, U.FirstName, U.LastName, U.Email, U.DisplayName
FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions AS S INNER JOIN
		{databaseOwner}{objectQualifier}activeforums_Forums as F on s.ForumId = f.ForumId INNER JOIN
                     {databaseOwner}{objectQualifier}Users AS U ON S.UserId = U.UserID INNER JOIN
                      {databaseOwner}{objectQualifier}UserPortals AS P ON U.UserID = P.UserId INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Security AS sec ON U.UserID = sec.ObjectId AND f.ForumSecurityKey = sec.SecurityKey
WHERE     (P.Authorised = 1) AND (u.IsSuperUser = 0) AND (sec.Subscribe = 1) AND (sec.ObjectType = 1) AND s.Mode = @SubType
	AND ((S.ForumId = @ForumId AND S.TopicId = 0) OR (S.TopicId = @TopicId)))

DECLARE @AutoSubscribe bit
DECLARE @AutoSubscribeRoles nvarchar(255)
DECLARE @TopicsOnly bit
DECLARE @IsNewTopic bit
SET @AutoSubscribe = IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings as S INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as F ON F.ForumSettingsKey = S.GroupKey  WHERE S.SettingName = 'AUTOSUBSCRIBEENABLED' AND F.ForumId  = @ForumId),0)
SET @AutoSubscribeRoles = IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings as S INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as F ON F.ForumSettingsKey = S.GroupKey  WHERE S.SettingName = 'AUTOSUBSCRIBEROLES' AND F.ForumId  = @ForumId),'')
SET @TopicsOnly = IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings as S INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as F ON F.ForumSettingsKey = S.GroupKey  WHERE S.SettingName = 'AUTOSUBSCRIBENEWTOPICSONLY' AND F.ForumId  = @ForumId),0)
SET @IsNewTopic = 0
IF (SELECT ReplyCount FROM {databaseOwner}{objectQualifier}activeforums_Topics WHERE TopicId = @TopicId) > 0
	SET @IsNewTopic = 1

If (@TopicsOnly = 1 AND @IsNewTopic = 0) OR (@TopicsOnly = 0)
	BEGIN
	IF @AutoSubscribe = 1 AND @AutoSubscribeRoles <> ''
		BEGIN
		INSERT INTO @subs 
		(userid, username, firstname, lastname, email, displayname)
		(SELECT  U.UserID, U.Username, U.FirstName, U.LastName, U.Email, U.DisplayName
		FROM                 {databaseOwner}{objectQualifier}Users AS U INNER JOIN
						  {databaseOwner}{objectQualifier}UserPortals AS P ON U.UserID = P.UserId INNER JOIN
						  {databaseOwner}{objectQualifier}UserRoles AS ur ON U.UserID = ur.UserID INNER JOIN
						  {databaseOwner}{objectQualifier}activeforums_Functions_Split(@AutoSubscribeRoles,';')  AS r ON ur.RoleId = r.ID 
		WHERE     (P.Authorised = 1) 
		
		AND (
				(
					(UR.EffectiveDate IS NULL AND UR.ExpiryDate >= GETDATE()) 
				 OR (UR.EffectiveDate IS NULL AND UR.ExpiryDate IS NULL)
				 OR (UR.EffectiveDate <= GETDATE() AND UR.ExpiryDate IS NULL)
				 OR (UR.EffectiveDate <= GETDATE() AND UR.ExpiryDate >= GETDATE())
				)
		
			))
		END
	END
SELECT DISTINCT * FROM @subs
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}activeforums_Topics_Save
@TopicId int,
@ViewCount int,
@ReplyCount int,
@IsLocked bit,
@IsPinned bit,
@TopicIcon nvarchar(25),
@StatusId int,
@IsApproved bit,
@IsDeleted bit,
@IsAnnounce bit,
@IsArchived bit,
@AnnounceStart datetime,
@AnnounceEnd datetime,
@Subject nvarchar(255),
@Body ntext,
@DateCreated datetime,
@DateUpdated datetime,
@AuthorId int,
@AuthorName nvarchar(150),
@IPAddress nvarchar(50),
@TopicType int
AS
DECLARE @ContentId int
IF EXISTS(SELECT ContentId FROM {databaseOwner}{objectQualifier}activeforums_Topics WHERE TopicId = @TopicId)
	BEGIN
		SELECT @ContentId = ContentId FROM {databaseOwner}{objectQualifier}activeforums_Topics WHERE TopicId = @TopicId

		BEGIN
			UPDATE {databaseOwner}{objectQualifier}activeforums_Content
				SET Subject = @Subject,
					Body = @Body,
					DateCreated = @DateCreated,
					DateUpdated = @DateUpdated,
					AuthorId = @AuthorId,
					AuthorName = @AuthorName,
					IsDeleted = @IsDeleted
				WHERE ContentId = @ContentId
			UPDATE {databaseOwner}{objectQualifier}activeforums_Topics
				SET ViewCount = @ViewCount,
					ReplyCount = @ReplyCount,
					IsLocked = @IsLocked,
					IsPinned = @IsPinned,
					TopicIcon = @TopicIcon,
					StatusId = @StatusId,
					IsApproved = @IsApproved,
					IsDeleted = @IsDeleted,
					IsAnnounce = @IsAnnounce,
					IsArchived = @IsArchived,
					AnnounceStart = @AnnounceStart,
					AnnounceEnd = @AnnounceEnd,
					TopicType = @TopicType
				WHERE TopicId = @TopicId	
		END
	END
ELSE

BEGIN
	BEGIN
		INSERT INTO {databaseOwner}{objectQualifier}activeforums_Content
			(Subject, Body, DateCreated, DateUpdated, AuthorId, AuthorName, IsDeleted, IPAddress)
			VALUES
			(@Subject, @Body, @DateCreated, @DateUpdated, @AuthorId, @AuthorName, @IsDeleted, @IPAddress)
		SET @ContentId = SCOPE_IDENTITY()
	END
	BEGIN
		INSERT INTO {databaseOwner}{objectQualifier}activeforums_Topics
			(ContentId, ViewCount, ReplyCount, IsLocked, IsPinned, TopicIcon, StatusId, IsApproved, IsDeleted, IsAnnounce, IsArchived, TopicType, AnnounceStart, AnnounceEnd)
			VALUES
			(@ContentId, @ViewCount, @ReplyCount, @IsLocked, @IsPinned, @TopicIcon, @StatusId, @IsApproved, @IsDeleted, @IsAnnounce, @IsArchived, @TopicType, @AnnounceStart, @AnnounceEnd)
		SET @TopicId = SCOPE_IDENTITY()
		UPDATE {databaseOwner}{objectQualifier}activeforums_UserProfiles SET DateLastPost = GetDate() WHERE UserId = @AuthorId
	END

END
BEGIN
IF @IsApproved = 1
	BEGIN
		UPDATE {databaseOwner}{objectQualifier}activeforums_UserProfiles SET DateLastPost = GetDate(), TopicCount = (TopicCount + 1) WHERE UserId = @AuthorId
	END
END
SELECT @TopicId
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_Security_Opt1] ON {databaseOwner}{objectQualifier}activeforums_Security
(
	[SecurityKey] ASC,
	[ObjectId] ASC,
	[ObjectType] ASC
)
INCLUDE ( [View],
[Read],
[Create],
[Reply],
[Edit],
[Delete],
[Lock],
[Pin],
[Attach],
[Poll],
[Block],
[Trust],
[Subscribe],
[Announce],
[ModApprove],
[ModMove],
[ModSplit],
[ModDelete],
[ModUser],
[ModEdit],
[ModLock],
[ModPin]) WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_Settings_Opt1] ON {databaseOwner}{objectQualifier}activeforums_Settings
(
	[GroupKey] ASC,
	[SettingName] ASC
)
INCLUDE ( [SettingValue]) WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE CLUSTERED INDEX [idx_{objectQualifier}activeforums_Settings_Opt2] ON {databaseOwner}{objectQualifier}activeforums_Settings
(
	[GroupKey] ASC,
	[SettingName] ASC,
	[ModuleId] ASC
)WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_Topics_Opt1] ON {databaseOwner}{objectQualifier}activeforums_Topics 
(
	[TopicId] ASC,
	[IsDeleted] ASC,
	[IsApproved] ASC
)WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_Topics_Opt2] ON {databaseOwner}{objectQualifier}activeforums_Topics 
(
	[IsApproved] ASC,
	[IsDeleted] ASC,
	[TopicId] ASC
)WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_Topics_Tracking_Opt1] ON {databaseOwner}{objectQualifier}activeforums_Topics_Tracking
(
	[UserId] ASC,
	[TopicId] ASC
)
INCLUDE ( [LastReplyId]) WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_Replies_Opt1] ON {databaseOwner}{objectQualifier}activeforums_Replies
(
	[ReplyId] ASC,
	[ContentId] ASC
)WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_Replies_Opt2] ON {databaseOwner}{objectQualifier}activeforums_Replies
(
	[TopicId] ASC,
	[IsDeleted] ASC,
	[IsApproved] ASC,
	[ContentId] ASC,
	[StatusId] ASC
)
INCLUDE ( [ReplyId]) WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_Content_Opt1] ON {databaseOwner}{objectQualifier}activeforums_Content
(
	[ContentId] ASC,
	[AuthorId] ASC
)
INCLUDE ( [IPAddress]) WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_Content_Opt2] ON {databaseOwner}{objectQualifier}activeforums_Content
(
	[ContentId] ASC,
	[IsDeleted] ASC
)WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_ForumTopics_Opt1] ON {databaseOwner}{objectQualifier}activeforums_ForumTopics
(
	[ForumId] ASC,
	[TopicId] ASC
)WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_ForumTopics_Opt2] ON {databaseOwner}{objectQualifier}activeforums_ForumTopics
(
	[ForumId] ASC,
	[TopicId] ASC,
	[LastReplyId] ASC
)WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_ForumTopics_Opt3] ON {databaseOwner}{objectQualifier}activeforums_ForumTopics
(
	[TopicId] ASC,
	[ForumId] ASC
)WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_ForumTopics_Opt4] ON {databaseOwner}{objectQualifier}activeforums_ForumTopics
(
	[TopicId] ASC,
	[ForumId] ASC,
	[LastReplyId] ASC
)WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_Forums_Tracking_Opt1] ON {databaseOwner}{objectQualifier}activeforums_Forums_Tracking
(
	[UserId] ASC,
	[ForumId] ASC
)
INCLUDE ( [MaxTopicRead],
[MaxReplyRead]) WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_UserProfiles_Opt1] ON {databaseOwner}{objectQualifier}activeforums_UserProfiles
(
	[UserId] ASC
)
INCLUDE ( [PortalId],
[DateLastActivity]) WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_UserProfiles_Opt2] ON {databaseOwner}{objectQualifier}activeforums_UserProfiles
(
	[UserId] ASC
)
INCLUDE ( [TopicCount],
[ReplyCount],
[ViewCount],
[AnswerCount],
[RewardPoints],
[UserCaption],
[DateCreated],
[DateLastActivity],
[Signature],
[SignatureDisabled],
[Avatar],
[AvatarType],
[AvatarDisabled],
[Yahoo],
[MSN],
[ICQ],
[AOL],
[Occupation],
[Location],
[Interests],
[WebSite]) WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
CREATE NONCLUSTERED INDEX [idx_{objectQualifier}activeforums_UserProfiles_Opt3] ON {databaseOwner}{objectQualifier}activeforums_UserProfiles 
(
	[PortalId] ASC,
	[UserId] ASC
)
INCLUDE ( [ProfileId],
[ModuleId],
[TopicCount],
[ReplyCount],
[ViewCount],
[AnswerCount],
[RewardPoints],
[UserCaption],
[DateCreated],
[DateUpdated],
[DateLastActivity],
[Signature],
[SignatureDisabled],
[TrustLevel],
[AdminWatch],
[AttachDisabled],
[Avatar],
[AvatarType],
[AvatarDisabled],
[PrefDefaultSort],
[PrefDefaultShowReplies],
[PrefJumpLastPost],
[PrefTopicSubscribe],
[PrefSubscriptionType],
[PrefUseAjax],
[PrefEmailFormat],
[PrefBlockAvatars],
[PrefBlockSignatures],
[PrefPageSize],
[Yahoo],
[MSN],
[ICQ],
[AOL],
[Occupation],
[Location],
[Interests],
[WebSite],
[Badges],
[DateLastPost]) WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) 
GO
