IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}vw_activeforums_ForumReplies]'))
DROP VIEW {databaseOwner}[{objectQualifier}vw_activeforums_ForumReplies]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW {databaseOwner}[{objectQualifier}vw_activeforums_ForumReplies]
AS
SELECT     F.ForumId, R.TopicId, RC.Subject, RC.Summary, RC.AuthorId, RC.AuthorName, R.ReplyId, ISNULL(U.Username,RC.AuthorName) as Username,
					IsNULL(U.FirstName,RC.AuthorName) as FirstName, IsNull(U.LastName,'') as LastName, IsNull(U.DisplayName,RC.AuthorName) as DisplayName, RC.Body, 
                    RC.ContentId, RC.DateCreated, T.Subject AS TopicSubject, RC.DateUpdated, RC.IPAddress, FF.PortalId, FF.ModuleId, FF.ForumName, T.TopicIcon, R.StatusId, 
                    T.IsLocked, T.IsPinned, T.ViewCount, T.ReplyCount, T.TopicType, R.IsApproved, FF.ForumGroupId, FF.SortOrder, R.IsRejected
FROM         {databaseOwner}{objectQualifier}activeforums_Content AS RC INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Replies AS R ON RC.ContentId = R.ContentId INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_ForumTopics AS F ON R.TopicId = F.TopicId INNER JOIN
                      {databaseOwner}{objectQualifier}vw_activeforums_ForumTopics AS T ON F.TopicId = T.TopicId INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Forums AS FF ON F.ForumId = FF.ForumId LEFT OUTER JOIN
                      {databaseOwner}{objectQualifier}Users AS U ON RC.AuthorId = U.UserID
WHERE     (RC.IsDeleted = 0) AND (R.IsDeleted = 0) AND (FF.Active = 1)


GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Topics_Get]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_Get]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_Get]
@PortalId int,
@ModuleId int,
@TopicId int,
@ForumId int,
@UserId int = -1,
@WithSecurity bit = 0
AS
SELECT     T.TopicId, T.ContentId, T.ViewCount, T.ReplyCount, T.IsLocked, T.IsPinned, IsNull(T.TopicIcon,'') as TopicIcon, T.StatusId, T.AnnounceStart, T.AnnounceEnd, C.Subject, C.Summary, C.Body, 
                      C.DateCreated, C.AuthorId, C.AuthorName, T.IsApproved, T.IsDeleted, T.IsAnnounce, T.IsArchived, T.TopicType, C.DateUpdated,T.IsApproved, IsNull(U.Username,'') as Username, 
                      IsNull(U.FirstName,'') as FirstName, IsNull(U.LastName,'') as LastName, IsNull(U.Email,'') as Email, IsNull(U.DisplayName,'') as DisplayName,
			Tags = IsNull({databaseOwner}{objectQualifier}activeforums_Topics_GetTags(@TopicId),'')
FROM        {databaseOwner}{objectQualifier}activeforums_Topics AS T INNER JOIN
            {databaseOwner}{objectQualifier}activeforums_Content AS C ON T.ContentId = C.ContentId LEFT OUTER JOIN
            {databaseOwner}{objectQualifier}Users AS U ON C.AuthorId = U.UserID
WHERE     (T.IsDeleted = 0) AND (T.IsArchived = 0) AND (C.IsDeleted = 0) AND (T.TopicId = @TopicId)

GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles_Create]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_Create]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_Create]
@PortalId int,
@ModuleId int,
@UserId int
AS
IF NOT EXISTS(Select ProfileId FROM {databaseOwner}{objectQualifier}activeforums_UserProfiles WHERE UserId = @UserId AND PortalId = @PortalId AND ModuleId = -1)
	BEGIN
	DECLARE @MemberSince datetime
	SELECT @MemberSince = CreatedDate FROM {databaseOwner}{objectQualifier}UserPortals WHERE UserId = @UserId AND PortalId = @PortalId
	INSERT INTO {databaseOwner}{objectQualifier}activeforums_UserProfiles
		(UserId, ModuleId, PortalId, DateCreated, DateLastActivity)
		VALUES
		(@UserId, -1, @PortalId, IsNull(@MemberSince,GetDate()), GetDate())
	DECLARE @TopicCount int 
	DECLARE @ReplyCount int
	SELECT @TopicCount = Count(*) FROM {databaseOwner}{objectQualifier}activeforums_Topics as T INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Content as C ON T.ContentId = C.ContentId
	WHERE c.authorid = @UserId
	SELECT @ReplyCount = Count(*) FROM {databaseOwner}{objectQualifier}activeforums_Replies as R INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Content as C ON R.ContentId = C.ContentId
	WHERE c.authorid = @UserId
	UPDATE {databaseOwner}{objectQualifier}activeforums_UserProfiles
		SET TopicCount = @TopicCount, ReplyCount = @ReplyCount WHERE UserId = @UserId AND PortalId = @PortalId AND ModuleId = @ModuleId
	END


GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UserProfiles_UpdateActivity]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_UpdateActivity]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UserProfiles_UpdateActivity]
@PortalId int,
@ModuleId int,
@UserId int

AS
If @UserId > 0 
	exec {databaseOwner}{objectQualifier}activeforums_UserProfiles_Create @PortalId, @ModuleId, @UserId
	UPDATE {databaseOwner}{objectQualifier}activeforums_UserProfiles SET DateLastActivity = GetDate() WHERE UserId = @UserId and PortalId = @PortalId AND ModuleId = -1


GO
UPDATE ptemp 
SET ptemp.moduleid = -1
from {databaseOwner}{objectQualifier}activeforums_UserProfiles as ptemp 
	INNER JOIN (
				SELECT UserId, PortalId FROM {databaseOwner}{objectQualifier}activeforums_UserProfiles GROUP BY UserId, PortalId HAVING COUNT(ModuleId) = 1
				) as c ON c.PortalId = ptemp.PortalId AND c.UserId = ptemp.UserId AND ptemp.ModuleId <> -1
GO
DELETE {databaseOwner}{objectQualifier}activeforums_UserProfiles FROM {databaseOwner}{objectQualifier}activeforums_UserProfiles as d1
INNER JOIN 
	(
		SELECT MIN(s1.ProfileId) as ProfileToKeep,s1.UserId, s1.PortalId from (
			SELECT p1.ProfileId, p1.UserId, p1.ModuleId, p1.PortalId  from {databaseOwner}{objectQualifier}activeforums_UserProfiles as p1
				INNER JOIN (
					SELECT UserId, PortalId FROM {databaseOwner}{objectQualifier}activeforums_UserProfiles GROUP BY UserId, PortalId HAVING COUNT(UserId) > 1
					) as p2 on p2.UserId = p1.UserId AND p2.PortalId = p1.PortalId
			) as s1 
		GROUP BY s1.PortalId, s1.UserId
	) as d2 on d2.UserId = d1.UserId and d2.PortalId = d1.PortalId  WHERE d1.ProfileId <> d2.ProfileToKeep AND d1.PortalId = d2.PortalId
GO
UPDATE ptemp 
SET ptemp.moduleid = -1
from {databaseOwner}{objectQualifier}activeforums_UserProfiles as ptemp 
	INNER JOIN (
				SELECT UserId, PortalId FROM {databaseOwner}{objectQualifier}activeforums_UserProfiles GROUP BY UserId, PortalId HAVING COUNT(ModuleId) = 1
				) as c ON c.PortalId = ptemp.PortalId AND c.UserId = ptemp.UserId
				WHERE ptemp.ModuleId <> -1
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Search_Standard]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Search_Standard]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Search_Standard]
	@PortalId int,
	@ModuleId int,
	@UserId int,
	@ForumId int,
	@IsSuperUser bit,
	@RowIndex int = 0,
	@MaxRows int = 20,
	@SearchString nvarchar(200), 
	@MatchType int = 0,
	@SearchField int = 0,--0=Subject&Body, 1= Subject, 2=Body
	@Timespan int = 0,
	@AuthorId int = 0,
	@Author nvarchar(200),
	@Forums varchar(8000),
	@Tags nvarchar(400),
	@ForumsAllowed nvarchar(1000)
as
IF @AuthorId = 0 AND @Author != ''
	BEGIN
		DECLARE @DisplayOpt varchar(50)
		SELECT @DisplayOpt = SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE ModuleId = @ModuleId AND SettingName = 'USERNAMEDISPLAY'
		If @DisplayOpt = 'Fullname' 
			SET @DisplayOpt = 'FirstName  + '' '' + LastName '
		DECLARE @sql nvarchar(2000)
		SET @sql = N'SELECT @RET = UserId FROM {databaseOwner}{objectQualifier}Users WHERE ' + @DisplayOpt + ' = ''' + @Author + ''''
		print @sql
		exec sp_executesql @stmt = @sql, @params = N'@RET as INT OUTPUT', @ret = @AuthorId OUTPUT;
		if @AuthorId = 0 SET @AuthorId = -1
	END
DECLARE @RowCount int
-- SeachString:  String of 1 or more search terms, all separated by spaces
-- MatchType: 0=match any, 1 =match all, 2 = exact match of entire expression only
-- Results are returned in order of relevance
declare @i1 int;
declare @i2 int;

declare @Word nvarchar(200);
declare @Words table (Word nvarchar(200) not null);
declare @WordCount as integer;

set nocount on
-- Parse the SearchString to extract all words:
if (@SearchString <> '') 
BEGIN
if (@MatchType != 2)
  begin
  set @SearchString = ' ' + @SearchString  + ' ';
  set @i1 = 1;
  while (@i1 != 0)
    begin
    set @i2=charindex(' ', @SearchString, @i1+1)
    if (@i2 != 0)
      begin
      set @Word = rtrim(ltrim(substring(@SearchString, @i1+1, @i2-@i1)))
      if @Word != '' insert into @Words select @Word
		if (@MatchType != 1)
		if UPPER(RIGHT(@Word,1)) = 'S' insert into @Words select LEFT(@Word,LEN(@Word)-1) ELSE insert into @Words select @Word + 's'
      end
    set @i1 = @i2
    end
  end
else
  insert into @Words select ltrim(rtrim(@SearchString))

-- Get the total # of words:
set @WordCount = (select count(*) from @Words)
END
-- Return Results in order of relevance:
DECLARE @tmpResults TABLE (topicid int,contentid int, rownum int, matchpct decimal(15,4))
BEGIN
IF @SearchString <> ''
BEGIN
INSERT INTO @tmpResults(topicid,contentid, matchpct,rownum)
		SELECT TopicId,contentid, hits.MatchPct, ROW_NUMBER() OVER (ORDER BY hits.MatchPct DESC, DateCreated DESC) as RowRank FROM
				(
					SELECT  t.topicid,t.datecreated,t.contentid			
					FROM         {databaseOwner}{objectQualifier}vw_activeforums_TopicView AS T INNER JOIN 
					{databaseOwner}{objectQualifier}activeforums_Forums as F ON T.ForumId = F.ForumId INNER JOIN
					{databaseOwner}{objectQualifier}activeforums_Functions_Split(@ForumsAllowed,';') as fs ON fs.id = f.ForumId INNER JOIN
					{databaseOwner}{objectQualifier}activeforums_Content AS C ON T.ContentId = C.ContentId 
						WHERE T.PortalId = @PortalId AND T.ModuleId = @ModuleId AND 
						(@TimeSpan = 0 OR DATEDIFF(hh,T.DateCreated,GetDate()) <= @TimeSpan) AND
						(@AuthorId = 0 OR T.AuthorId = @AuthorId) AND
						(@ForumId <= 0 OR T.ForumId =  @ForumId) AND
						(@Tags = '' OR (@Tags <> '' AND T.TopicId IN (
														SELECT TopicId FROM {databaseOwner}{objectQualifier}activeforums_Tags INNER JOIN
														{databaseOwner}{objectQualifier}activeforums_Topics_Tags ON {databaseOwner}{objectQualifier}activeforums_Tags.TagId = {databaseOwner}{objectQualifier}activeforums_Topics_Tags.TagId
														WHERE	{databaseOwner}{objectQualifier}activeforums_Tags.TagName = @Tags))) AND
						(@SearchString <> '' OR @Tags <> '' OR @AuthorId > 0) AND
						(@Forums = '' OR T.ForumId IN (SELECT id FROM {databaseOwner}{objectQualifier}activeforums_Functions_Split(@Forums,':')))
			) as results INNER JOIN
				(
					SELECT ContentId as cid, MatchPct FROM (SELECT C.ContentId, Count(*)  * 1.0 / @WordCount as MatchPct 
					FROM {databaseOwner}{objectQualifier}activeforums_Content C INNER JOIN 
					@Words W on 
					CASE @SearchField
									WHEN 0 THEN ' ' + Convert(nvarchar(max),c.Body) + ' ' + c.Subject + ' '
									WHEN 1 THEN ' ' + c.Subject + ' '
									WHEN 2 THEN ' ' + Convert(nvarchar(max),c.Body) + ' '
								END like '%[^a-z]' + Word + '[^a-z]%'
							GROUP BY ContentId) as hits
							WHERE MatchPct = 1 or @MatchType <> 1 
				) as hits ON results.ContentId = hits.cid
		
END
ELSE
	BEGIN
		INSERT INTO @tmpResults(topicid,contentid, matchpct,rownum)
		SELECT TopicId,contentid, hits.MatchPct, ROW_NUMBER() OVER (ORDER BY hits.MatchPct DESC, DateCreated DESC) as RowRank FROM
				(
					SELECT  t.topicid,t.datecreated,t.contentid			
					FROM         {databaseOwner}{objectQualifier}vw_activeforums_TopicView AS T INNER JOIN 
					{databaseOwner}{objectQualifier}activeforums_Forums as F ON T.ForumId = F.ForumId INNER JOIN
					{databaseOwner}{objectQualifier}activeforums_Functions_Split(@ForumsAllowed,';') as fs ON fs.id = f.ForumId INNER JOIN
					{databaseOwner}{objectQualifier}activeforums_Content AS C ON T.ContentId = C.ContentId 
						WHERE T.PortalId = @PortalId AND T.ModuleId = @ModuleId AND 
						(@TimeSpan = 0 OR DATEDIFF(hh,T.DateCreated,GetDate()) <= @TimeSpan) AND
						(@AuthorId = 0 OR T.AuthorId = @AuthorId) AND
						(@ForumId <= 0 OR T.ForumId =  @ForumId) AND
						(@Tags = '' OR (@Tags <> '' AND T.TopicId IN (
														SELECT TopicId FROM {databaseOwner}{objectQualifier}activeforums_Tags INNER JOIN
														{databaseOwner}{objectQualifier}activeforums_Topics_Tags ON {databaseOwner}{objectQualifier}activeforums_Tags.TagId = {databaseOwner}{objectQualifier}activeforums_Topics_Tags.TagId
														WHERE	{databaseOwner}{objectQualifier}activeforums_Tags.TagName = @Tags))) AND
						(@SearchString <> '' OR @Tags <> '' OR @AuthorId > 0) AND
						(@Forums = '' OR T.ForumId IN (SELECT id FROM {databaseOwner}{objectQualifier}activeforums_Functions_Split(@Forums,':')))
			) as results INNER JOIN
				(
					SELECT ContentId as cid, 1 as MatchPct FROM {databaseOwner}{objectQualifier}activeforums_Content WHERE AuthorId = @AuthorId
				) as hits ON results.ContentId = hits.cid
	END
END
SELECT Count(*) from @tmpResults WHERE (MatchPct IS NOT NULL AND @SearchString <> '' OR @Tags <> '' OR @AuthorId > 0)
SELECT T.PortalId, T.ModuleId, T.ForumId, T.ForumName, T.TopicId, T.ReplyId, IsNull(T.Subject,'') as Subject,
	 T.Summary, T.AuthorId, IsNull(T.AuthorName,'') as AuthorName, IsNull(T.Username,'') as UserName, IsNull(T.FirstName,'') as FirstName, 
		IsNull(T.LastName,'') as LastName, IsNull(T.DisplayName,'') as DisplayName, T.DateCreated, 
                      T.DateUpdated, T.ContentId, TopicIcon, StatusId, TopicType, IsPinned, IsLocked, ViewCount, ReplyCount,IsNull(c.Body,'') as Body FROM         
			{databaseOwner}{objectQualifier}vw_activeforums_TopicView AS T INNER JOIN
					@tmpResults AS r ON T.contentid = r.contentid INNER JOIN
					{databaseOwner}{objectQualifier}activeforums_Content as c ON c.ContentId = t.ContentId
WHERE rownum > @RowIndex AND rownum <= (@RowIndex + @MaxRows)
ORDER BY  T.DateCreated DESC,MatchPct DESC



GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_DashBoard_Stats]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_DashBoard_Stats]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_DashBoard_Stats]
@PortalId int,
@ModuleId int
AS
BEGIN
SELECT     TOP 5 T.TopicId, C.Subject, C.DateCreated, U.Username, U.FirstName, U.LastName, U.DisplayName, C.AuthorName, C.Summary
FROM         {databaseOwner}{objectQualifier}activeforums_Topics  AS T WITH (NOLOCK) INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Content  AS C WITH (NOLOCK) ON T.ContentId = C.ContentId INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_ForumTopics AS FT WITH (NOLOCK) ON T.TopicId = FT.TopicId INNER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Forums  AS F WITH (NOLOCK) ON FT.ForumId = F.ForumId LEFT OUTER JOIN
                      {databaseOwner}{objectQualifier}Users AS U ON C.AuthorId = U.UserID
WHERE     (T.IsApproved = 1) AND (T.IsDeleted = 0) AND (F.ModuleId = @ModuleId)
ORDER BY C.DateCreated DESC
END
BEGIN
SELECT  TOP 5   U.UserID, U.Username, U.FirstName, U.LastName, U.Email, U.DisplayName, UP.CreatedDate, UP.PortalId
FROM         {databaseOwner}{objectQualifier}Users AS U WITH (NOLOCK) INNER JOIN
                      {databaseOwner}{objectQualifier}UserPortals AS UP WITH (NOLOCK) ON U.UserID = UP.UserId
WHERE     (UP.Authorised = 1) AND (UP.PortalId = @PortalId)
ORDER BY UP.CreatedDate DESC
END
BEGIN

SELECT   TOP 5  ForumId, ModuleId, ForumName, TotalTopics, TotalReplies
FROM         {databaseOwner}{objectQualifier}activeforums_Forums WITH (NOLOCK)
WHERE     (Active = 1) AND (ModuleId = @ModuleId)
ORDER BY (TotalTopics + TotalReplies) DESC
END
BEGIN
SELECT     TOP 10 UP.ProfileId, UP.UserId, UP.ModuleId, UP.PortalId, UP.TopicCount, UP.ReplyCount, UP.ViewCount, UP.AnswerCount, UP.RewardPoints, U.Username, 
                      U.FirstName, U.LastName, U.DisplayName
FROM         {databaseOwner}{objectQualifier}activeforums_UserProfiles AS UP WITH (NOLOCK) INNER JOIN
             {databaseOwner}{objectQualifier}Users  AS U WITH (NOLOCK) ON UP.UserId = U.UserID
WHERE     (UP.PortalId = @PortalId)
ORDER BY ((UP.TopicCount * 10) + (UP.ReplyCount * 5) + UP.ViewCount) DESC
END
BEGIN
DECLARE @TotalForums int
DECLARE @TotalTopics int
DECLARE @TotalReplies int
DECLARE @TotalUsers int
DECLARE @TotalActiveUsers int
SELECT @TotalForums = Count(*) FROM {databaseOwner}{objectQualifier}activeforums_Forums WHERE ModuleId = @ModuleId and Active = 1
SELECT @TotalTopics = SUM(TotalTopics), @TotalReplies = SUM(TotalReplies) FROM {databaseOwner}{objectQualifier}activeforums_Forums WHERE ModuleId = @ModuleId AND Active = 1
SELECT @TotalUsers = Count(*) FROM {databaseOwner}{objectQualifier}Users AS U  WITH (NOLOCK) INNER JOIN
                      {databaseOwner}{objectQualifier}UserPortals AS UP WITH (NOLOCK) ON U.UserID = UP.UserId
WHERE     (UP.Authorised = 1) AND (UP.PortalId = @PortalId)
SELECT @TotalActiveUsers = Count(*) FROM {databaseOwner}{objectQualifier}activeforums_UserProfiles WITH (NOLOCK) WHERE PortalId = @PortalId AND DATEDIFF(dd,GetDate(),DateLastActivity) < 30
SELECT @TotalForums as TotalForums, @TotalTopics as TotalTopics, @TotalReplies as TotalReplies, @TotalUsers as TotalMembers, @TotalActiveUsers as TotalActiveMembers

END

GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_ForumGetByTopicId]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_ForumGetByTopicId]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_ForumGetByTopicId]
@TopicId int
AS 
DECLARE @ForumId int
SET @ForumId = (SELECT ISNULL(F.ForumId,-1) FROM {databaseOwner}{objectQualifier}activeforums_Forums AS F INNER JOIN {databaseOwner}{objectQualifier}activeforums_ForumTopics as ft ON ft.ForumId = f.ForumId
WHERE ft.TopicId = @TopicId)
SELECT ISNULL(@ForumId,-1)



GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Topics_Save]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_Save]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Topics_Save]
@PortalId int,
@TopicId int,
@ViewCount int,
@ReplyCount int,
@IsLocked bit,
@IsPinned bit,
@TopicIcon nvarchar(25),
@StatusId int,
@IsApproved bit,
@IsDeleted bit,
@IsAnnounce bit,
@IsArchived bit,
@AnnounceStart datetime,
@AnnounceEnd datetime,
@Subject nvarchar(255),
@Body ntext,
@DateCreated datetime,
@DateUpdated datetime,
@AuthorId int,
@AuthorName nvarchar(150),
@IPAddress nvarchar(50),
@TopicType int
AS
DECLARE @ContentId int
DECLARE @ApprovedStatus bit
SET @ApprovedStatus = @IsApproved
IF EXISTS(SELECT ContentId FROM {databaseOwner}{objectQualifier}activeforums_Topics WHERE TopicId = @TopicId)
	BEGIN
		SELECT @ApprovedStatus = IsApproved, @ContentId = ContentId FROM {databaseOwner}{objectQualifier}activeforums_Topics WHERE TopicId = @TopicId

		BEGIN
			UPDATE {databaseOwner}{objectQualifier}activeforums_Content
				SET Subject = @Subject,
					Body = @Body,
					DateCreated = @DateCreated,
					DateUpdated = @DateUpdated,
					AuthorId = @AuthorId,
					AuthorName = @AuthorName,
					IsDeleted = @IsDeleted
				WHERE ContentId = @ContentId
			UPDATE {databaseOwner}{objectQualifier}activeforums_Topics
				SET ViewCount = @ViewCount,
					ReplyCount = @ReplyCount,
					IsLocked = @IsLocked,
					IsPinned = @IsPinned,
					TopicIcon = @TopicIcon,
					StatusId = @StatusId,
					IsApproved = @IsApproved,
					IsDeleted = @IsDeleted,
					IsAnnounce = @IsAnnounce,
					IsArchived = @IsArchived,
					AnnounceStart = @AnnounceStart,
					AnnounceEnd = @AnnounceEnd,
					TopicType = @TopicType
				WHERE TopicId = @TopicId	
		END
	END
ELSE

BEGIN
	BEGIN
		INSERT INTO {databaseOwner}{objectQualifier}activeforums_Content
			(Subject, Body, DateCreated, DateUpdated, AuthorId, AuthorName, IsDeleted, IPAddress)
			VALUES
			(@Subject, @Body, @DateCreated, @DateUpdated, @AuthorId, @AuthorName, @IsDeleted, @IPAddress)
		SET @ContentId = SCOPE_IDENTITY()
	END
	BEGIN
		INSERT INTO {databaseOwner}{objectQualifier}activeforums_Topics
			(ContentId, ViewCount, ReplyCount, IsLocked, IsPinned, TopicIcon, StatusId, IsApproved, IsDeleted, IsAnnounce, IsArchived, TopicType, AnnounceStart, AnnounceEnd)
			VALUES
			(@ContentId, @ViewCount, @ReplyCount, @IsLocked, @IsPinned, @TopicIcon, @StatusId, @IsApproved, @IsDeleted, @IsAnnounce, @IsArchived, @TopicType, @AnnounceStart, @AnnounceEnd)
		SET @TopicId = SCOPE_IDENTITY()
		
	END

END
BEGIN
IF @IsApproved = 1 And @AuthorId > 0 
	BEGIN
		UPDATE {databaseOwner}{objectQualifier}activeforums_UserProfiles 
			SET DateLastPost = GetDate()
			WHERE UserId = @AuthorId AND PortalId = @PortalId
	END
END
SELECT @TopicId

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_Reply_Save]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Reply_Save]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_Reply_Save]
@PortalId int,
@TopicId int,
@ReplyId int,
@ReplyToId int,
@StatusId int,
@IsApproved bit,
@IsDeleted bit,
@Subject nvarchar(255),
@Body ntext,
@DateCreated datetime,
@DateUpdated datetime,
@AuthorId int,
@AuthorName nvarchar(150),
@IPAddress nvarchar(50)
AS
DECLARE @ContentId int
DECLARE @IsEdit bit
SET @IsEdit = 0
DECLARE @ApprovedStatus bit
SET @ApprovedStatus = @IsApproved
IF EXISTS(SELECT ContentId FROM {databaseOwner}{objectQualifier}activeforums_Replies WHERE ReplyId = @ReplyId)
	BEGIN
		SELECT @ContentId = ContentId, @ApprovedStatus = IsApproved FROM {databaseOwner}{objectQualifier}activeforums_Replies WHERE ReplyId = @ReplyId
		
		BEGIN
			SET @IsEdit = 1
			UPDATE {databaseOwner}{objectQualifier}activeforums_Content
				SET Subject = @Subject,
					Body = @Body,
					DateCreated = @DateCreated,
					DateUpdated = @DateUpdated,
					AuthorId = @AuthorId,
					AuthorName = @AuthorName,
					IsDeleted = @IsDeleted,
					IPAddress = @IPAddress
				WHERE ContentId = @ContentId
			UPDATE {databaseOwner}{objectQualifier}activeforums_Replies
				SET StatusId = @StatusId,
					TopicId = @TopicId,
					IsApproved = @IsApproved,
					IsDeleted = @IsDeleted,
					ReplyToId = @ReplyToId					
				WHERE ReplyId = @ReplyId	
		END
	END
ELSE
--INSERT
BEGIN
	BEGIN
		INSERT INTO {databaseOwner}{objectQualifier}activeforums_Content
			(Subject, Body, DateCreated, DateUpdated, AuthorId, AuthorName, IsDeleted, IPAddress)
			VALUES
			(@Subject, @Body, @DateCreated, @DateUpdated, @AuthorId, @AuthorName, @IsDeleted, @IPAddress)
		SET @ContentId = SCOPE_IDENTITY()
	END
	BEGIN
		INSERT INTO {databaseOwner}{objectQualifier}activeforums_Replies
			(ContentId, TopicId, StatusId, IsApproved, IsDeleted, ReplyToId)
			VALUES
			(@ContentId, @TopicId, @StatusId, @IsApproved, @IsDeleted, @ReplyToId)
		SET @ReplyId = SCOPE_IDENTITY()
		
	END
	

END
IF @IsApproved = 1
	BEGIN
		DECLARE @ForumId int
		SELECT @ForumId = ForumId FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics WHERE TopicId = @TopicId
		DECLARE @TotalReplies int
		SET @TotalReplies = (SELECT Count(ReplyId) from {databaseOwner}{objectQualifier}activeforums_replies as r inner join {databaseOwner}{objectQualifier}activeforums_topics as t on t.topicid = r.topicid and r.isapproved = 1 and r.isdeleted = 0 INNER JOIN {databaseOwner}{objectQualifier}activeforums_forumtopics as ft on t.topicid = ft.topicid WHERE ft.forumid = @ForumId)
		UPDATE {databaseOwner}{objectQualifier}activeforums_Forums 
		SET LastPostSubject = @Subject, LastPostAuthorName = @AuthorName, LastPostAuthorId = IsNull(@AuthorId,-1), 
			LastPostDate = @DateCreated, LastTopicId = IsNull(@TopicId,0), LastReplyId = IsNull(@ReplyId,0),
			TotalReplies = ISNULL(@TotalReplies,0)
		WHERE ForumId = @ForumId
		UPDATE {databaseOwner}{objectQualifier}activeforums_Topics
			SET ReplyCount = (Select Count(ReplyId) from {databaseOwner}{objectQualifier}activeforums_Replies WHERE TopicId = @TopicId AND IsDeleted = 0 AND IsApproved = 1)
			WHERE TopicId = @TopicId
			If @IsEdit = 0
				UPDATE {databaseOwner}{objectQualifier}activeforums_ForumTopics SET LastReplyId = @ReplyId 	WHERE TopicId = @TopicId
			IF @AuthorId > 0
				UPDATE {databaseOwner}{objectQualifier}activeforums_UserProfiles 
					SET ReplyCount = ISNULL((Select Count(ReplyId) from {databaseOwner}{objectQualifier}activeforums_Replies as r INNER JOIN 
							{databaseOwner}{objectQualifier}activeforums_Content as c ON r.ContentId = c.ContentId AND c.AuthorId=@AuthorId INNER JOIN
							{databaseOwner}{objectQualifier}activeforums_ForumTopics as ft ON ft.TopicId = r.TopicId INNER JOIN
							{databaseOwner}{objectQualifier}activeforums_Forums as f ON ft.ForumId = f.ForumId
							WHERE r.IsApproved = 1 AND r.IsDeleted=0 AND f.PortalId=@PortalId),0)
					WHERE UserId = @AuthorId AND PortalId = @PortalId					
			
		
	END
SELECT @ReplyId

GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}activeforums_UI_TopicView]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_TopicView]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE {databaseOwner}[{objectQualifier}activeforums_UI_TopicView]
@PortalId int,
@ModuleId int,
@ForumId int,
@TopicId int,
@UserId int,
@RowIndex int, 
@MaxRows int,
@IsSuperUser bit = 0,
@Sort varchar(10) = 'ASC'
AS
--Forum/Group/Topic Info
DECLARE @LastPostId int
DECLARE @ReplyCount int
SET @ReplyCount = (Select Count(ReplyId) from {databaseOwner}{objectQualifier}activeforums_Replies WHERE TopicId = @TopicId AND IsDeleted = 0 AND IsApproved = 1)
DECLARE @Tags nvarchar(1000)
SET @Tags= RTRIM(IsNull({databaseOwner}{objectQualifier}activeforums_Topics_GetTags(@TopicId),''))
BEGIN
SELECT     
	v.ForumGroupId, 
	v.ModuleId, 
	v.GroupName, 
	v.GroupActive, 
	v.GroupHidden, 
	v.ForumId, 
	v.ParentForumId, 
	v.ForumName, 
	v.ForumDesc, 
	v.ForumActive, 
	v.ForumHidden, 
    v.TotalTopics, 
	ISNULL(v.TotalReplies, 0) AS TotalReplies,
	v.LastPostId,
	v.GroupSettingsKey,
	v.ForumSettingsKey,
	TopicTemplateId = IsNull((SELECT SettingValue FROM {databaseOwner}{objectQualifier}activeforums_Settings WHERE SettingName = 'TOPICTEMPLATEID' and GroupKey = v.ForumSettingsKey),0),
    
                          IsNull((SELECT     SettingValue
                            FROM          {databaseOwner}{objectQualifier}activeforums_Settings AS activeforums_Settings_1
                            WHERE      (SettingName = 'ALLOWRSS') AND (GroupKey = v.ForumSettingsKey)),0) AS AllowRSS,
                          IsNull((SELECT     SettingValue
                            FROM          {databaseOwner}{objectQualifier}activeforums_Settings AS activeforums_Settings_3
                            WHERE      (SettingName = 'ALLOWHTML') AND (GroupKey = v.ForumSettingsKey)),0) AS AllowHTML,
                          IsNull((SELECT     SettingValue
                            FROM          {databaseOwner}{objectQualifier}activeforums_Settings AS activeforums_Settings_2
                            WHERE      (SettingName = 'ALLOWSCRIPT') AND (GroupKey = v.ForumSettingsKey)),0) AS AllowScript,
                            IsNull((SELECT     SettingValue
                            FROM          {databaseOwner}{objectQualifier}activeforums_Settings
                            WHERE      (SettingName = 'ALLOWTAGS') AND (GroupKey = v.ForumSettingsKey)),0) AS AllowTags,
                             FT.TopicId,
                          (SELECT     ISNULL(AVG(Rating), 0) AS Expr1
                            FROM          {databaseOwner}{objectQualifier}activeforums_Topics_Ratings
                            WHERE      (TopicId = @TopicId)) AS TopicRating,
ISNULL
                          ((SELECT     Id
                              FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions
                              WHERE     (ForumId = @ForumId) AND (TopicId = @TopicId) AND (UserId = @UserId)), 0) AS IsSubscribedTopic, ISNULL
                          ((SELECT     Id
                              FROM         {databaseOwner}{objectQualifier}activeforums_Subscriptions AS activeforums_Subscriptions_1
                              WHERE     (ForumId = @ForumId) AND (TopicId = 0) AND (UserId = @UserId)), 0) AS IsSubscribedForum,
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.DateCreated,'') ELSE IsNull(R.DateCreated,'') END AS LastPostDate, 
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.AuthorId,'') ELSE IsNull(R.AuthorId,'') END AS LastPostAuthorId, 
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.AuthorName,'') ELSE IsNull(R.AuthorName,'') END AS LastPostAuthorName,
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.UserName,'') ELSE IsNull(R.Username,'') END AS LastPostUserName,
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.FirstName,'') ELSE IsNull(R.FirstName,'') END AS LastPostFirstName, 
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.LastName,'') ELSE IsNull(R.LastName,'') END AS LastPostLastName, 
						CASE WHEN FT.LastReplyId is NULL THEN IsNull(T.DisplayName,'') ELSE IsNull(R.DisplayName,'') END AS LastPostDisplayName, T.Subject, T.Summary, T.Body, T.AuthorId, T.AuthorName, T.Username, T.FirstName, T.LastName, 
                      T.DisplayName, T.DateCreated, T.DateUpdated, T.ViewCount, @ReplyCount as ReplyCount, T.IsPinned, T.IsLocked, T.StatusId, T.TopicIcon, T.TopicType, @Tags as Tags,
                      {databaseOwner}{objectQualifier}activeforums_Poll.PollID,
					{databaseOwner}{objectQualifier}activeforums_Topic_GetPrevNext(@ForumId, @TopicId, 1) AS NextTopic, 
                    {databaseOwner}{objectQualifier}activeforums_Topic_GetPrevNext(@ForumId, @TopicId, -1) AS PrevTopic
FROM         {databaseOwner}{objectQualifier}activeforums_ForumTopics AS FT INNER JOIN
                      {databaseOwner}{objectQualifier}vw_activeforums_GroupForum AS v ON FT.ForumId = v.ForumId INNER JOIN
                      {databaseOwner}{objectQualifier}vw_activeforums_ForumTopics AS T ON FT.TopicId = T.TopicId LEFT OUTER JOIN
                      {databaseOwner}{objectQualifier}vw_activeforums_ForumReplies AS R ON FT.LastReplyId = R.ReplyId AND FT.LastReplyId IS NOT NULL LEFT OUTER JOIN
                      {databaseOwner}{objectQualifier}activeforums_Poll ON T.TopicId = {databaseOwner}{objectQualifier}activeforums_Poll.TopicId
WHERE     (v.ForumActive = 1) AND (v.ModuleId = @ModuleId) AND (v.ForumId = @ForumId) AND (FT.TopicId = @TopicId)
END
--Forum Security
BEGIN
	Select p.* from {databaseOwner}{objectQualifier}activeforums_Permissions as p INNER JOIN {databaseOwner}{objectQualifier}activeforums_Forums as f ON f.PermissionsId = p.PermissionsId WHERE f.ForumId = @ForumId
	
END
--Get Topic and Replies
	SELECT	ForumId, TopicId, ReplyId, [Subject], Summary, AuthorId, StatusId, AuthorName, UserName, FirstName, LastName,
			DisplayName, DateCreated, DateUpdated, Body, TopicCount, ReplyCount, ViewCount, AnswerCount,
			RewardPoints, UserDateCreated, DateLastActivity, UserCaption, [Signature], SignatureDisabled,
			UserPostCount, UserTotalPoints,IPAddress,Avatar,AvatarType,AvatarDisabled,Yahoo,MSN,ICQ,AOL,Occupation,Location,Interests,WebSite,MemberSince,
			ContentId,IsUserOnline,	UserRoles = {databaseOwner}{objectQualifier}activeforums_UserProfiles_GetUserRoles(AuthorId, @PortalID, GetDate(),0),
			@Tags as Tags
			
	FROM
			(
			SELECT	T.ForumId, T.TopicId, T.ReplyId, T.Subject, T.Summary, T.AuthorId, T.StatusId, IsNull(T.AuthorName,'anon') as AuthorName, IsNull(T.Username,IsNull(T.AuthorName,'anon')) as Username,
			IsNull(T.FirstName,'') as FirstName, IsNull(T.LastName,'') as LastName,IsNull(T.DisplayName,T.AuthorName) as DisplayName,
			T.DateCreated, T.DateUpdated, C.Body, IsNull(P.TopicCount,0) as TopicCount, IsNull(P.ReplyCount,0) as ReplyCount,
			IsNull(P.ViewCount,0) as ViewCount, IsNull(P.AnswerCount,0) as AnswerCount, IsNull(P.RewardPoints,0) as RewardPoints,
			IsNull(P.DateCreated,'') AS UserDateCreated, IsNull(P.DateLastActivity,'') as DateLastActivity, 
			IsNull(P.UserCaption,'') as UserCaption, IsNull(P.Signature,'') as [Signature], IsNull(P.SignatureDisabled,0) as SignatureDisabled, 
			UserPostCount = (IsNull(P.TopicCount,0) + IsNull(P.ReplyCount,0)), 
			UserTotalPoints = (IsNull(P.TopicCount,0) + IsNull(P.ReplyCount,0) + IsNull(P.AnswerCount,0) + IsNull(P.RewardPoints,0)),
			C.IPAddress, IsNull(P.Avatar,'') as Avatar, IsNull(P.AvatarType,0) as AvatarType, IsNull(P.AvatarDisabled,0) as AvatarDisabled,
			IsNull(P.Yahoo,'') as Yahoo, IsNull(P.MSN,'') as MSN, IsNull(P.ICQ,'') as ICQ, IsNull(P.AOL,'') as AOL, IsNull(P.Occupation,'') as Occupation, 
			IsNull(P.Location,'') as Location, IsNull(P.Interests,'') as Interests, IsNull(P.WebSite,'') as WebSite, IsNull(P.DateCreated,'') as MemberSince,
			C.ContentId, IsUserOnline = (CASE WHEN DATEDIFF(mi,p.DateLastActivity,GetDate()) <=1 THEN 1 ELSE 0 END),
			ROW_NUMBER() OVER (Order By 
								CASE
									WHEN @Sort = 'DESC' THEN T.DateCreated END DESC,
								CASE 
									WHEN @Sort = 'ASC' THEN T.DateCreated END ASC
								) as RowRank
			FROM	{databaseOwner}{objectQualifier}vw_activeforums_TopicView AS T INNER JOIN
                    {databaseOwner}{objectQualifier}activeforums_Content AS C ON T.ContentId = C.ContentId LEFT OUTER JOIN
                    {databaseOwner}{objectQualifier}activeforums_UserProfiles AS P ON C.AuthorId = P.UserId AND P.PortalId = @PortalId AND P.ModuleId = -1
			WHERE     (T.TopicId = @TopicId)
			)
		AS TopicWithRowNumbers
		WHERE RowRank > @RowIndex AND RowRank <= (@RowIndex + @MaxRows)

--Get Attachments
SELECT     A.AttachID, c.ContentId, A.PostID, A.UserID, A.Filename, A.DateAdded, A.DateUpdated, A.FileData, A.ContentType, A.FileSize, A.AllowDownload
FROM         {databaseOwner}{objectQualifier}activeforums_Attachments AS A INNER JOIN
			{databaseOwner}{objectQualifier}activeforums_Content_Attachments as c on a.attachid = c.attachid inner join
                      {databaseOwner}{objectQualifier}vw_activeforums_TopicView AS T ON c.ContentId = T.ContentId
WHERE     (T.TopicId = @TopicId AND A.AllowDownload = 1)
--Update View Count
UPDATE {databaseOwner}{objectQualifier}activeforums_Topics SET ViewCount = (ViewCount+1) WHERE TopicId = @TopicId
If @UserId > 0
BEGIN
SELECT @LastPostId = IsNull(LastReplyId,0) FROM {databaseOwner}{objectQualifier}activeforums_ForumTopics WHERE ForumId = @ForumId AND TopicId = @TopicId
exec {databaseOwner}{objectQualifier}activeforums_Forums_Tracking_UpdateUser @ModuleId, @UserId, @ForumId	
SET @LastPostId = IsNull(@LastPostId,0)
exec {databaseOwner}{objectQualifier}activeforums_Topics_Tracking_UpdateUser @ForumId, @TopicId, @LastPostId, @UserId
exec {databaseOwner}{objectQualifier}activeforums_UserProfiles_UpdateActivity @PortalId, @ModuleId, @UserId
END




GO





